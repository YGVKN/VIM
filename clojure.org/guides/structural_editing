<!DOCTYPE html>
<!-- This site was created in Webflow. http://www.webflow.com-->
<!-- Last Published: Fri Nov 13 2015 01:48:45 GMT+0000 (UTC) -->
<html lang="en" data-wf-site="56414d6fc8c27cad0f4e12e7" data-wf-page="5643ac587b1f28dc58ed6b89">
<head>
  <meta charset="utf-8">
  <title>Clojure - Structural Editing</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="generator" content="Webflow">
  <meta name="google-site-verification" content="a30CDuC9UBifM7EL575LK9a4TEE6mNfWbKqXIoSZChg" />
  <meta name="google-site-verification" content="iXqpntr4CN3JRM1sVm5D_YzZw8bFRizBaTVycwqii2E" />
  <meta name="keywords" content="clojure,programming" />
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&family=PT+Serif:ital@0;1&&family=Source+Code+Pro:wght@500&display=swap">
  <link rel="stylesheet" type="text/css" href="/css/normalize.css">
  <link rel="stylesheet" type="text/css" href="/css/webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/clojureorg.webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/asciidoctor-mod.css">
  <link type="text/css" href="/css/default-en.css" rel="stylesheet">
  <link type="text/css" href="/css/default.css" rel="stylesheet">
  <link type="text/css" href="/css/search-result.css" rel="stylesheet">
  <link rel="alternate" type="application/atom+xml" title="News" href="/feed.xml" />
  <script type="text/javascript" src="/js/modernizr.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/images/clojure-logo-icon-32.png">
  <link rel="apple-touch-icon" href="/images/clojure-logo-icon-256.png">
  <!-- Matomo -->
  <script>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
      var u="https://cognitect.matomo.cloud/";
      _paq.push(['setTrackerUrl', u+'matomo.php']);
      _paq.push(['setSiteId', '9']);
      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src='//cdn.matomo.cloud/cognitect.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
    })();
  </script>
<!-- End Matomo Code -->
  <script type="text/javascript">
    function searchClj(obj) {
      let e = document.getElementById("searchType");
      document.getElementById("hiddenSearch").value=e.value;
    }
  </script>
</head>
<body>
  <div data-collapse="none" data-animation="default" data-duration="400" data-contain="1" class="w-nav clj-navbar">
    <div class="w-container">
      <a href="/index" class="w-nav-brand w-clearfix clj-logo-container"><img width="60" src="/images/clojure-logo-120b.png" class="clj-logo" alt="Clojure logo">
        <div class="clj-logo-text">Clojure</div>
      </a>
      <nav role="navigation" class="w-nav-menu clj-nav-menu"><a href="/about/rationale" class="w-nav-link clj-nav-link">Overview</a><a href="/reference/documentation" class="w-nav-link clj-nav-link">Reference‚Äç</a><a href="/api/api" class="w-nav-link clj-nav-link">API</a><a href="/releases/downloads" class="w-nav-link clj-nav-link">Releases</a><a href="/guides/guides" class="w-nav-link clj-nav-link">Guides</a><a href="/community/success_stories" class="w-nav-link clj-nav-link">Community</a><a href="/dev/dev" class="w-nav-link clj-nav-link">Dev</a><a href="/news/news" class="w-nav-link clj-nav-link">News</a><a href="#" data-ix="search-click-trigger" class="w-nav-link clj-nav-link clj-nav-search">&#xed11;</a>
      </nav>
      <div class="w-nav-button clj-menu-button">
        <div class="w-icon-nav-menu"></div>
      </div>
    </div>
  </div>
  <div data-ix="hide-search" class="w-section clj-search-section">
    <div class="w-container">
      <div class="w-form clj-search-form-wrapper">
        <form id="wf-form-Search-Form" name="wf-form-Search-Form" action="https://duckduckgo.com/" method="get" onSubmit="searchClj(this)">
          <div class="w-row">
            <div class="w-col w-col-6 w-col-small-6">
              <input id="hiddenSearch" type="hidden" name="sites" value="www.clojure.org">
              <input name="q" id="q" type="text" placeholder="Search clojure.org reference, guides, and API" title="Search text" autofocus="autofocus" class="w-input clj-search-input">
            </div>
            <div class="w-col w-col-3 w-col-small-3 clj-search-type">
              <select name="searchType" id="searchType" class="w-select clj-search-type">
                <option value="www.clojure.org">clojure.org</option>
                <option value="ask.clojure.org">ask.clojure.org</option>
              </select>
            </div>
            <div class="w-col w-col-3 w-col-small-3">
              <input type="submit" value="Search" class="w-button clj-search-submit">
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

<div class="w-section clj-content-section">
  <div class="w-container">
    <div class="clj-section-nav-container">
      <div data-collapse="small" data-animation="default" data-duration="200" data-contain="1" class="w-nav clj-section-navbar">
        <div class="w-container">
          <nav role="navigation" class="w-nav-menu clj-section-nav-menu">
            <div class="w-nav-link clj-section-nav-heading">Learning</div>
            <a href="getting_started" class="w-nav-link clj-section-nav-item-link">Getting Started</a>
            <a href="install_clojure" class="w-nav-link clj-section-nav-item-link">Install Clojure</a>
            <a href="editors" class="w-nav-link clj-section-nav-item-link">Editors</a>
            <a href="structural_editing" class="w-nav-link clj-section-nav-item-link">Structural Editing</a>
            <a href="repl/introduction" class="w-nav-link clj-section-nav-item-link">REPL Programming <span class="clj-nav-nested-icon">&#xeab8;</span></a>
            <a href="learn/clojure" class="w-nav-link clj-section-nav-item-link">Learn Clojure <span class="clj-nav-nested-icon">&#xeab8;</span></a>
            <a href="faq" class="w-nav-link clj-section-nav-item-link">FAQ</a>

            <div class="w-nav-link clj-section-nav-heading">Language</div>
            <a href="spec" class="w-nav-link clj-section-nav-item-link">spec</a>
            <a href="weird_characters" class="w-nav-link clj-section-nav-item-link">Reading Clojure Characters</a>
            <a href="destructuring" class="w-nav-link clj-section-nav-item-link">Destructuring</a>
            <a href="threading_macros" class="w-nav-link clj-section-nav-item-link">Threading Macros</a>
            <a href="equality" class="w-nav-link clj-section-nav-item-link">Equality</a>
            <a href="comparators" class="w-nav-link clj-section-nav-item-link">Comparators</a>
            <a href="reader_conditionals" class="w-nav-link clj-section-nav-item-link">Reader Conditionals</a>
            <a href="higher_order_functions" class="w-nav-link clj-section-nav-item-link">Higher Order Functions</a>

            <div class="w-nav-link clj-section-nav-heading">Usage</div>
            <a href="dev_startup_time" class="w-nav-link clj-section-nav-item-link">Dev Startup Time</a>

            <div class="w-nav-link clj-section-nav-heading">Tools</div>
            <a href="deps_and_cli" class="w-nav-link clj-section-nav-item-link">Deps and CLI</a>
            <a href="tools_build" class="w-nav-link clj-section-nav-item-link">tools.build</a>

            <div class="w-nav-link clj-section-nav-heading">Libraries</div>
            <a href="async_walkthrough" class="w-nav-link clj-section-nav-item-link">core.async Walkthrough</a>
            <a href="core_async_go" class="w-nav-link clj-section-nav-item-link">Go Block Best Practices</a>
            <a href="test_check_beginner" class="w-nav-link clj-section-nav-item-link">test.check</a>
          </nav>
          <div data-ix="toggle-section-nav-icon" class="w-nav-button w-clearfix clj-section-nav-toggle">
            <div class="clj-section-nav-text">Structural Editing</div>
            <div class="clj-section-nav-icon-closed">&#xeab2;</div>
            <div data-ix="init-hide-section-nav-icon-open" class="clj-section-nav-icon-open">&#xeab9;</div>
          </div>
        </div>
      </div>
    </div>
    <div class="clj-content-container">

      <h1>Structural Editing</h1>

      <div id="preamble">
<div class="sectionbody">
<div id="toc" class="toc">
<div id="toctitle" class="title">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#_what_is_structural_editing">What is structural editing?</a></li>
<li><a href="#_balanced_forms">Balanced forms</a></li>
<li><a href="#_navigation_and_selection">Navigation and selection</a></li>
<li><a href="#_cutpaste_aka_killyank">Cut/paste aka kill/yank</a></li>
<li><a href="#_slurping_and_barfing">Slurping and barfing</a></li>
<li><a href="#_splicing_and_raising">Splicing and raising</a></li>
<li><a href="#_parinfer">Parinfer</a></li>
<li><a href="#_resources">Resources</a></li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_what_is_structural_editing"><a class="anchor" href="#_what_is_structural_editing"></a>What is structural editing?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Text editors treat files as lines of characters. Common functionality involves: typing new characters, navigating by line (up/down) or character (right/left), selecting/copying/pasting text, deleting or replacing text, etc. All of these operations operate at either the character or line level.</p>
</div>
<div class="paragraph">
<p>When we examine Clojure code, we note that it can be viewed as a nested set of forms, where each level of nesting is a collection with beginning and ending delimiters: <code>( &#8230;&#8203; )</code>, <code>[ &#8230;&#8203; ]</code>, <code>{ &#8230;&#8203; }</code>, etc. This regular structure forms a tree, and structural editing is a new set of operations for manipulating our code at the node/tree level, instead of the character/line level.</p>
</div>
<div class="paragraph">
<p>Structural editing has a long history with editing Lisp languages, and is most associated with Emacs and in particular the Emacs paredit mode. But the ideas are more general than either Lisp or Emacs and indeed structural editing can be found in virtually any editor designed to support Clojure.</p>
</div>
<div class="paragraph">
<p>Similar to character-based editing, structural editing has ways to create new forms, navigate, select, copy/paste, delete, etc but all in terms of nested expressions rather than characters or lines. This page intends to introduce you to some high-level terms and concepts in structural editing, and not to cover any specific editors or keys as the details vary significantly depending on the editor (and are usually customizable as well).</p>
</div>
<div class="paragraph">
<p>When you get started, focus on memorizing a small set of commands (which are all covered below): kill, slurp forward, barf forward, splice, and raise. As you encounter other scenarios find the appropriate structural editing command and add it to your toolkit.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_balanced_forms"><a class="anchor" href="#_balanced_forms"></a>Balanced forms</h2>
<div class="sectionbody">
<div class="paragraph">
<p>A general principle of structural editing is to ensure that all forms are balanced at all times. This is immediately apparent when creating new forms in your code. If you type the beginning delimiter for a collection, your editor will also insert the ending delimiter. If you type <code>(</code>, your editor will insert <code>()</code> with your cursor in the middle so you can keep typing inside the form.  Most editors also provide some visual feedback that match beginning and ending delimiters as you move across them, or may even support code folding and unfolding based on this structure.</p>
</div>
<div class="paragraph">
<p>One common issue you may encounter (especially while learning) is the accidental use of a line editing command that unbalances your code structure. For example, if you have a multi-line nested expression, deleting one line from the middle is highly likely to delete a left paren but not it&#8217;s matching right paren on a subsequent line. Don&#8217;t panic!</p>
</div>
<div class="paragraph">
<p>Some common ways to fix this situation:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Undo - often you can simply undo that line command and then use a structural editing command instead</p>
</li>
<li>
<p>Turn off structural editing, fix the problem, and re-enable structural editing - in some editors there is a button in the footer or elsewhere to toggle structural editing and this is relatively easy, in others it will harder.</p>
</li>
<li>
<p>Use character editing commands to fix - in some cases, such as a dangling opening paren to delete, you can select the opening paren and use character deletion to delete it (outside structural editing)</p>
</li>
<li>
<p>Use comments and character editing - if you have a dangling open paren to close, you can insert a Clojure comment <code>;</code>, allowing you to type the <code>)</code>, then select the <code>;</code> and delete it with character editing</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_navigation_and_selection"><a class="anchor" href="#_navigation_and_selection"></a>Navigation and selection</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Navigation (and selection, which typically rides along as a modifier) is an extension of the navigation and selection you already have for characters and lines. Instead of selecting the next word, you also have options to select the next expression or widen by selecting the containing expression (up the tree). And don&#8217;t forget that you can still use your mouse to select if that&#8217;s the most comfortable thing for you.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_cutpaste_aka_killyank"><a class="anchor" href="#_cutpaste_aka_killyank"></a>Cut/paste aka kill/yank</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Cutting text in Emacs is known as "killing" and pasting is known as "yanking". In Emacs, killing puts the cut block of text into the "kill ring", which is effectively a stack. By default, "yanking" pastes the text at the top of the stack and removes it from the kill ring. Whether your editor supports all of this functionality will depend on the editor, but the important thing is that when you are looking at key bindings, "kill" means "cut".</p>
</div>
<div class="paragraph">
<p>By default, most structural editors will cut from the current location to the end of the current collection. Most editors have a variety of other options, but simply the default kill and selection are sufficient for most of your work.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_slurping_and_barfing"><a class="anchor" href="#_slurping_and_barfing"></a>Slurping and barfing</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The "slurp forward" command slurps the expression after the current collection into the collection as the last item. "Barf forward" does the opposite, moving the last item of the collection outside and after the current collection. Backward variants that operate on the first element of the collection exist as well but are much less common.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_splicing_and_raising"><a class="anchor" href="#_splicing_and_raising"></a>Splicing and raising</h2>
<div class="sectionbody">
<div class="paragraph">
<p>One common scenario that occurs is to want to splice the contents of your current collection into the parent collection. When doing that you have the option to drop the items before ("splice killing backwards") or after ("splice killing forwards"). You may also want to replace the parent with only the value of the element at the cursor and this is known as "raise".</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_parinfer"><a class="anchor" href="#_parinfer"></a>Parinfer</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Several years ago, a new alternative to Paredit was developed called <a href="https://shaunlebron.github.io/parinfer/">Parinfer</a>. Parinfer links indentation to nesting and thus allows you to insert a child expression simply by indenting your code. Many editors support Parinfer as an alternative to Paredit. If you are new to structural editing, you should try it to see if it makes sense to you! In general, this seems to be a matter of personal preference.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_resources"><a class="anchor" href="#_resources"></a>Resources</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The resources below may be useful for you as an additional step toward either learning the paredit commands or how to use structural editing in a particular editor. In general, most core command sets are similar and have configurable key bindings. Often, the default key bindings trace back to Paredit in Emacs, but don&#8217;t feel constrained by that, it&#8217;s common to customize these.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://raw.githubusercontent.com/joelittlejohn/paredit-cheatsheet/master/paredit.pdf">Paredit cheat sheet</a></p>
</li>
<li>
<p><a href="http://danmidwood.com/content/2014/11/21/animated-paredit.html">Animated Paredit</a> by Dan Midwood</p>
</li>
<li>
<p><a href="https://practical.li/spacemacs/structural-editing/">Smartparens for Spacemacs</a> by Practicalli</p>
</li>
<li>
<p><a href="https://cursive-ide.com/userguide/paredit.html">Cursive guide to structural editing</a> from Cursive user guide</p>
</li>
<li>
<p><a href="https://calva.io/paredit/">Calva guide to paredit</a> from Calva user guide</p>
</li>
</ul>
</div>
</div>
</div>

      <p><em>Original author: Alex Miller</em></p>


<div class="clj-prev-next-container">
  
  
</div>

    </div>
  </div>
</div>

  <div class="w-section clj-footer">
    <div class="w-container clj-footer-links-container">
      <div class="w-row">
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Community</h6>
            <a href="/community/resources" class="clj-footer-link">Resources</a>
            <a href="/community/contributing" class="clj-footer-link">Contributing</a>
            <a href="/community/companies" class="clj-footer-link">Companies</a>
            <a href="/community/contributing_site" class="clj-footer-link">Site</a>
          <h6 class="clj-footer-heading">Legal</h6>
            <a href="/community/license" class="clj-footer-link">License</a>
            <a href="/privacy" class="clj-footer-link">Privacy Policy</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Documentation</h6>
            <a href="/about/rationale" class="clj-footer-link">Overview</a>
            <a href="/reference/documentation" class="clj-footer-link">Reference</a>
            <a href="/api/api" class="clj-footer-link">API</a>
            <a href="/guides/guides" class="clj-footer-link">Guides</a>
            <a href="/community/libraries" class="clj-footer-link">Libraries &amp; Tools</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Updates</h6>
            <a href="/news/news" class="clj-footer-link">News</a>
            <a href="/community/events" class="clj-footer-link">Events</a>
          <h6 class="clj-footer-heading">ETC</h6>
            <a href="https://www.youtube.com/user/ClojureTV" class="clj-footer-link">ClojureTV</a>
            <a href="/community/books" class="clj-footer-link">Books</a>
            <a href="/community/swag" class="clj-footer-link">Swag</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Code</h6>
            <a href="/releases/downloads" class="clj-footer-link">Releases</a>
            <a href="https://github.com/clojure/clojure/" class="clj-footer-link">Source</a>
            <a href="http://clojurescript.org" class="clj-footer-link">ClojureScript</a>
            <a href="/about/clojureclr" class="clj-footer-link">ClojureCLR</a>
        </div>
      </div>
    </div>
    <div class="w-container clj-footer-legal-container">
      <div class="w-clearfix clj-footer-legal">
        <div class="clj-footer-logo">&nbsp;</div>
        <div class="clj-footer-legal-links">
          <div class="clj-footer-copyright">Copyright 2008-2022 Rich Hickey | <a class="clj-footer-sub-link" href="/privacy">Privacy Policy</a><br/>Logo &amp; site design by Tom Hickey
          </div>
          <div class="clj-footer-designed-by">Published 2023-12-18<br/>Update <a class="clj-footer-sub-link" href="https://github.com/clojure/clojure-site/blob/master/content/guides/structural_editing.adoc">this page</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script type="text/javascript" src="/js/webflow.js"></script>
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script>
  $(document).ready( (event) => {
    $('pre code').each((index, obj) => {
      $(obj).addClass($(obj).attr("data-lang"));
      hljs.highlightBlock(obj);
    });
  });
  </script>
  <!--[if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
</body>
</html>
