<!DOCTYPE html>
<!-- This site was created in Webflow. http://www.webflow.com-->
<!-- Last Published: Fri Nov 13 2015 01:48:45 GMT+0000 (UTC) -->
<html lang="en" data-wf-site="56414d6fc8c27cad0f4e12e7" data-wf-page="5643ac587b1f28dc58ed6b89">
<head>
  <meta charset="utf-8">
  <title>Clojure - Higher Order Functions</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="generator" content="Webflow">
  <meta name="google-site-verification" content="a30CDuC9UBifM7EL575LK9a4TEE6mNfWbKqXIoSZChg" />
  <meta name="google-site-verification" content="iXqpntr4CN3JRM1sVm5D_YzZw8bFRizBaTVycwqii2E" />
  <meta name="keywords" content="clojure,programming" />
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&family=PT+Serif:ital@0;1&&family=Source+Code+Pro:wght@500&display=swap">
  <link rel="stylesheet" type="text/css" href="/css/normalize.css">
  <link rel="stylesheet" type="text/css" href="/css/webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/clojureorg.webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/asciidoctor-mod.css">
  <link type="text/css" href="/css/default-en.css" rel="stylesheet">
  <link type="text/css" href="/css/default.css" rel="stylesheet">
  <link type="text/css" href="/css/search-result.css" rel="stylesheet">
  <link rel="alternate" type="application/atom+xml" title="News" href="/feed.xml" />
  <script type="text/javascript" src="/js/modernizr.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/images/clojure-logo-icon-32.png">
  <link rel="apple-touch-icon" href="/images/clojure-logo-icon-256.png">
  <!-- Matomo -->
  <script>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
      var u="https://cognitect.matomo.cloud/";
      _paq.push(['setTrackerUrl', u+'matomo.php']);
      _paq.push(['setSiteId', '9']);
      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src='//cdn.matomo.cloud/cognitect.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
    })();
  </script>
<!-- End Matomo Code -->
  <script type="text/javascript">
    function searchClj(obj) {
      let e = document.getElementById("searchType");
      document.getElementById("hiddenSearch").value=e.value;
    }
  </script>
</head>
<body>
  <div data-collapse="none" data-animation="default" data-duration="400" data-contain="1" class="w-nav clj-navbar">
    <div class="w-container">
      <a href="/index" class="w-nav-brand w-clearfix clj-logo-container"><img width="60" src="/images/clojure-logo-120b.png" class="clj-logo" alt="Clojure logo">
        <div class="clj-logo-text">Clojure</div>
      </a>
      <nav role="navigation" class="w-nav-menu clj-nav-menu"><a href="/about/rationale" class="w-nav-link clj-nav-link">Overview</a><a href="/reference/documentation" class="w-nav-link clj-nav-link">Reference‚Äç</a><a href="/api/api" class="w-nav-link clj-nav-link">API</a><a href="/releases/downloads" class="w-nav-link clj-nav-link">Releases</a><a href="/guides/guides" class="w-nav-link clj-nav-link">Guides</a><a href="/community/success_stories" class="w-nav-link clj-nav-link">Community</a><a href="/dev/dev" class="w-nav-link clj-nav-link">Dev</a><a href="/news/news" class="w-nav-link clj-nav-link">News</a><a href="#" data-ix="search-click-trigger" class="w-nav-link clj-nav-link clj-nav-search">&#xed11;</a>
      </nav>
      <div class="w-nav-button clj-menu-button">
        <div class="w-icon-nav-menu"></div>
      </div>
    </div>
  </div>
  <div data-ix="hide-search" class="w-section clj-search-section">
    <div class="w-container">
      <div class="w-form clj-search-form-wrapper">
        <form id="wf-form-Search-Form" name="wf-form-Search-Form" action="https://duckduckgo.com/" method="get" onSubmit="searchClj(this)">
          <div class="w-row">
            <div class="w-col w-col-6 w-col-small-6">
              <input id="hiddenSearch" type="hidden" name="sites" value="www.clojure.org">
              <input name="q" id="q" type="text" placeholder="Search clojure.org reference, guides, and API" title="Search text" autofocus="autofocus" class="w-input clj-search-input">
            </div>
            <div class="w-col w-col-3 w-col-small-3 clj-search-type">
              <select name="searchType" id="searchType" class="w-select clj-search-type">
                <option value="www.clojure.org">clojure.org</option>
                <option value="ask.clojure.org">ask.clojure.org</option>
              </select>
            </div>
            <div class="w-col w-col-3 w-col-small-3">
              <input type="submit" value="Search" class="w-button clj-search-submit">
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

<div class="w-section clj-content-section">
  <div class="w-container">
    <div class="clj-section-nav-container">
      <div data-collapse="small" data-animation="default" data-duration="200" data-contain="1" class="w-nav clj-section-navbar">
        <div class="w-container">
          <nav role="navigation" class="w-nav-menu clj-section-nav-menu">
            <div class="w-nav-link clj-section-nav-heading">Learning</div>
            <a href="getting_started" class="w-nav-link clj-section-nav-item-link">Getting Started</a>
            <a href="install_clojure" class="w-nav-link clj-section-nav-item-link">Install Clojure</a>
            <a href="editors" class="w-nav-link clj-section-nav-item-link">Editors</a>
            <a href="structural_editing" class="w-nav-link clj-section-nav-item-link">Structural Editing</a>
            <a href="repl/introduction" class="w-nav-link clj-section-nav-item-link">REPL Programming <span class="clj-nav-nested-icon">&#xeab8;</span></a>
            <a href="learn/clojure" class="w-nav-link clj-section-nav-item-link">Learn Clojure <span class="clj-nav-nested-icon">&#xeab8;</span></a>
            <a href="faq" class="w-nav-link clj-section-nav-item-link">FAQ</a>

            <div class="w-nav-link clj-section-nav-heading">Language</div>
            <a href="spec" class="w-nav-link clj-section-nav-item-link">spec</a>
            <a href="weird_characters" class="w-nav-link clj-section-nav-item-link">Reading Clojure Characters</a>
            <a href="destructuring" class="w-nav-link clj-section-nav-item-link">Destructuring</a>
            <a href="threading_macros" class="w-nav-link clj-section-nav-item-link">Threading Macros</a>
            <a href="equality" class="w-nav-link clj-section-nav-item-link">Equality</a>
            <a href="comparators" class="w-nav-link clj-section-nav-item-link">Comparators</a>
            <a href="reader_conditionals" class="w-nav-link clj-section-nav-item-link">Reader Conditionals</a>
            <a href="higher_order_functions" class="w-nav-link clj-section-nav-item-link">Higher Order Functions</a>

            <div class="w-nav-link clj-section-nav-heading">Usage</div>
            <a href="dev_startup_time" class="w-nav-link clj-section-nav-item-link">Dev Startup Time</a>

            <div class="w-nav-link clj-section-nav-heading">Tools</div>
            <a href="deps_and_cli" class="w-nav-link clj-section-nav-item-link">Deps and CLI</a>
            <a href="tools_build" class="w-nav-link clj-section-nav-item-link">tools.build</a>

            <div class="w-nav-link clj-section-nav-heading">Libraries</div>
            <a href="async_walkthrough" class="w-nav-link clj-section-nav-item-link">core.async Walkthrough</a>
            <a href="core_async_go" class="w-nav-link clj-section-nav-item-link">Go Block Best Practices</a>
            <a href="test_check_beginner" class="w-nav-link clj-section-nav-item-link">test.check</a>
          </nav>
          <div data-ix="toggle-section-nav-icon" class="w-nav-button w-clearfix clj-section-nav-toggle">
            <div class="clj-section-nav-text">Higher Order Functions</div>
            <div class="clj-section-nav-icon-closed">&#xeab2;</div>
            <div data-ix="init-hide-section-nav-icon-open" class="clj-section-nav-icon-open">&#xeab9;</div>
          </div>
        </div>
      </div>
    </div>
    <div class="clj-content-container">

      <h1>Higher Order Functions</h1>

      <div id="preamble">
<div class="sectionbody">
<div id="toc" class="toc">
<div id="toctitle" class="title">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#_first_class_functions">First Class Functions</a></li>
<li><a href="#_higher_order_functions">Higher Order Functions</a>
<ul class="sectlevel2">
<li><a href="#_functions_as_arguments">Functions as Arguments</a></li>
</ul>
</li>
<li><a href="#_function_literals">Function Literals</a>
<ul class="sectlevel2">
<li><a href="#_functions_returning_functions_and_closures">Functions Returning Functions and Closures</a></li>
<li><a href="#_filter">Filter</a></li>
</ul>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_first_class_functions"><a class="anchor" href="#_first_class_functions"></a>First Class Functions</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In functional programming, functions are first class citizens.
This means functions can be treated as values.
They can be assigned as values, passed into functions, and returned from functions.</p>
</div>
<div class="paragraph">
<p>It&#8217;s common to see function definitions in Clojure using <code>defn</code> like <code>(defn foo &#8230;&#8203;)</code>.
However, this is just syntactic sugar for <code>(def foo (fn &#8230;&#8203;))</code>
<code>fn</code> returns a function object.
<code>defn</code> returns a var which points to a function object.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_higher_order_functions"><a class="anchor" href="#_higher_order_functions"></a>Higher Order Functions</h2>
<div class="sectionbody">
<div class="paragraph">
<p>A higher order function is a function that either:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Takes one or more functions as arguments</p>
</li>
<li>
<p>Returns a function as its result</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>This is an important concept in functional programming in any language.</p>
</div>
<div class="paragraph">
<p>Higher order functions allow us to <em>compose</em> functions.
This means we can write small functions and combine them to create larger functions.
Like putting a bunch of small LEGO bricks together to build a house.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s move away from theory a bit and look at an example.</p>
</div>
<div class="sect2">
<h3 id="_functions_as_arguments"><a class="anchor" href="#_functions_as_arguments"></a>Functions as Arguments</h3>
<div class="paragraph">
<p>Let&#8217;s look at two functions</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn double-+
    [a b]
    (* 2 (+ a b)))</code></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn double-*
    [a b]
    (* 2 (* a b)))</code></pre>
</div>
</div>
<div class="paragraph">
<p>These functions share a common pattern.
They only differ in name and the function used in the computation of <code>a</code> and <code>b</code>.
In general, the pattern looks like this.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn double-&lt;f&gt;
    [a b]
    (* 2 (f a b)))</code></pre>
</div>
</div>
<div class="paragraph">
<p>We can generalize our <code>double-</code> function by passing <code>f</code> in as an argument.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn double-op
    [f a b]
    (* 2 (f a b)))</code></pre>
</div>
</div>
<div class="paragraph">
<p>We can use this to express the concept of doubling the result of an operation rather than having to write functions that perform specific doubled operations individually.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_function_literals"><a class="anchor" href="#_function_literals"></a>Function Literals</h2>
<div class="sectionbody">
<div class="paragraph">
<p>An anonymous function is a function without a name.
In Clojure these can be defined in two ways, <code>fn</code> and the literal <code>#(&#8230;&#8203;)</code>.
Creating a function with <code>defn</code> immediately binds it to a name, <code>fn</code> just creates a function.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s have an example with a few music bands:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(def bands [
    {:name "Brown Beaters"   :genre :rock}
    {:name "Sunday Sunshine" :genre :blues}
    {:name "Foolish Beaters" :genre :rock}
    {:name "Monday Blues"    :genre :blues}
    {:name "Friday Fewer"    :genre :blues}
    {:name "Saturday Stars"  :genre :jazz}
    {:name "Sunday Brunch"   :genre :jazz}
])</code></pre>
</div>
</div>
<div class="paragraph">
<p>We want to retrieve only rock bands. This is a one-off operation, we&#8217;re not going to use it anywhere else in our code.
We can save ourselves some keystrokes by using an anonymous function.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(def rock-bands
    (filter
        (fn [band] (= :rock (:genre band)))
        bands))</code></pre>
</div>
</div>
<div class="paragraph">
<p>Even more concisely, using the function literal, we can define <code>rock-bands</code> like so.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(def rock-bands (filter #(= :rock (:genre %)) bands))</code></pre>
</div>
</div>
<div class="paragraph">
<p>The function literal supports multiple arguments via <code>%</code>, <code>%n</code>, and <code>%&amp;</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">#(println %1 %2 %3)</code></pre>
</div>
</div>
<div class="paragraph">
<p>If you&#8217;re writing an anonymous function, the literal syntax is nice because it&#8217;s so compact.
However, beyond a few arguments, the syntax can become difficult to read.
In that case, using <code>fn</code> may be more appropriate.</p>
</div>
<div class="sect2">
<h3 id="_functions_returning_functions_and_closures"><a class="anchor" href="#_functions_returning_functions_and_closures"></a>Functions Returning Functions and Closures</h3>
<div class="paragraph">
<p>Our first function will be called <code>adder</code>.
It will take a number, <code>x</code>, as its only argument and return a function.
The function returned by <code>adder</code> will also take a single number, <code>a</code>, as its argument and return <code>x + a</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn adder [x]
  (fn [a] (+ x a)))

(def add-five (adder 5))

(add-five 100)
;; =&gt; 105</code></pre>
</div>
</div>
<div class="paragraph">
<p>The returned function form <code>adder</code> is a closure.
This means, it can access all of the variables that were in scope when the function was created.
<code>add-five</code> has access to <code>x</code> even though it is outside of the <code>adder</code> function definition.</p>
</div>
</div>
<div class="sect2">
<h3 id="_filter"><a class="anchor" href="#_filter"></a>Filter</h3>
<div class="paragraph">
<p>Filtering is a common operation in computer programming.
Take this set of animals</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(def pets [
    {:name "Fluffykins" :type :cat}
    {:name "Sparky" :type :dog}
    {:name "Tibby" :type :dog}
    {:name "Al" :type :fish}
    {:name "Victor" :type :bear}
])</code></pre>
</div>
</div>
<div class="paragraph">
<p>We want to filter out the non-dog animals because we&#8217;re writing enterprise grade software.
First, let&#8217;s look at a normal for loop.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn loop-dogs [pets]
    (loop [pets pets
           dogs []]
        (if (first pets)
            (recur (rest pets)
                   (if (= :dog (:type (first pets)))
                       (conj dogs (first pets))
                       dogs))
            dogs)))</code></pre>
</div>
</div>
<div class="paragraph">
<p>This code works fine, but it&#8217;s bulky and confusing.
We can simplify this using <code>filter</code>, a higher order function.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn filter-dogs [pets]
    (filter #(= :dog (:type %)) pets))</code></pre>
</div>
</div>
<div class="paragraph">
<p>The solution using <code>filter</code> is much clearer and allows us to show intent rather than just give commands.
We can break this into even smaller pieces by breaking the filtering function out into a separate <code>var</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(defn dog? [pet] (= :dog (:type pet)))

(defn filter-dogs [pets] (filter dog? pets))</code></pre>
</div>
</div>
</div>
</div>
</div>

      <p><em>Original author: Michael Zavarella</em></p>


<div class="clj-prev-next-container">
  
  
</div>

    </div>
  </div>
</div>

  <div class="w-section clj-footer">
    <div class="w-container clj-footer-links-container">
      <div class="w-row">
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Community</h6>
            <a href="/community/resources" class="clj-footer-link">Resources</a>
            <a href="/community/contributing" class="clj-footer-link">Contributing</a>
            <a href="/community/companies" class="clj-footer-link">Companies</a>
            <a href="/community/contributing_site" class="clj-footer-link">Site</a>
          <h6 class="clj-footer-heading">Legal</h6>
            <a href="/community/license" class="clj-footer-link">License</a>
            <a href="/privacy" class="clj-footer-link">Privacy Policy</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Documentation</h6>
            <a href="/about/rationale" class="clj-footer-link">Overview</a>
            <a href="/reference/documentation" class="clj-footer-link">Reference</a>
            <a href="/api/api" class="clj-footer-link">API</a>
            <a href="/guides/guides" class="clj-footer-link">Guides</a>
            <a href="/community/libraries" class="clj-footer-link">Libraries &amp; Tools</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Updates</h6>
            <a href="/news/news" class="clj-footer-link">News</a>
            <a href="/community/events" class="clj-footer-link">Events</a>
          <h6 class="clj-footer-heading">ETC</h6>
            <a href="https://www.youtube.com/user/ClojureTV" class="clj-footer-link">ClojureTV</a>
            <a href="/community/books" class="clj-footer-link">Books</a>
            <a href="/community/swag" class="clj-footer-link">Swag</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Code</h6>
            <a href="/releases/downloads" class="clj-footer-link">Releases</a>
            <a href="https://github.com/clojure/clojure/" class="clj-footer-link">Source</a>
            <a href="http://clojurescript.org" class="clj-footer-link">ClojureScript</a>
            <a href="/about/clojureclr" class="clj-footer-link">ClojureCLR</a>
        </div>
      </div>
    </div>
    <div class="w-container clj-footer-legal-container">
      <div class="w-clearfix clj-footer-legal">
        <div class="clj-footer-logo">&nbsp;</div>
        <div class="clj-footer-legal-links">
          <div class="clj-footer-copyright">Copyright 2008-2022 Rich Hickey | <a class="clj-footer-sub-link" href="/privacy">Privacy Policy</a><br/>Logo &amp; site design by Tom Hickey
          </div>
          <div class="clj-footer-designed-by">Published 2023-12-18<br/>Update <a class="clj-footer-sub-link" href="https://github.com/clojure/clojure-site/blob/master/content/guides/higher_order_functions.adoc">this page</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script type="text/javascript" src="/js/webflow.js"></script>
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script>
  $(document).ready( (event) => {
    $('pre code').each((index, obj) => {
      $(obj).addClass($(obj).attr("data-lang"));
      hljs.highlightBlock(obj);
    });
  });
  </script>
  <!--[if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
</body>
</html>
