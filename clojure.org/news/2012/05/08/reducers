<!DOCTYPE html>
<!-- This site was created in Webflow. http://www.webflow.com-->
<!-- Last Published: Fri Nov 13 2015 01:48:45 GMT+0000 (UTC) -->
<html lang="en" data-wf-site="56414d6fc8c27cad0f4e12e7" data-wf-page="5643ac587b1f28dc58ed6b89">
<head>
  <meta charset="utf-8">
  <title>Clojure - Reducers - A Library and Model for Collection Processing</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="generator" content="Webflow">
  <meta name="google-site-verification" content="a30CDuC9UBifM7EL575LK9a4TEE6mNfWbKqXIoSZChg" />
  <meta name="google-site-verification" content="iXqpntr4CN3JRM1sVm5D_YzZw8bFRizBaTVycwqii2E" />
  <meta name="keywords" content="clojure,programming" />
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&family=PT+Serif:ital@0;1&&family=Source+Code+Pro:wght@500&display=swap">
  <link rel="stylesheet" type="text/css" href="/css/normalize.css">
  <link rel="stylesheet" type="text/css" href="/css/webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/clojureorg.webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/asciidoctor-mod.css">
  <link type="text/css" href="/css/default-en.css" rel="stylesheet">
  <link type="text/css" href="/css/default.css" rel="stylesheet">
  <link type="text/css" href="/css/search-result.css" rel="stylesheet">
  <link rel="alternate" type="application/atom+xml" title="News" href="/feed.xml" />
  <script type="text/javascript" src="/js/modernizr.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/images/clojure-logo-icon-32.png">
  <link rel="apple-touch-icon" href="/images/clojure-logo-icon-256.png">
  <!-- Matomo -->
  <script>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
      var u="https://cognitect.matomo.cloud/";
      _paq.push(['setTrackerUrl', u+'matomo.php']);
      _paq.push(['setSiteId', '9']);
      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src='//cdn.matomo.cloud/cognitect.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
    })();
  </script>
<!-- End Matomo Code -->
  <script type="text/javascript">
    function searchClj(obj) {
      let e = document.getElementById("searchType");
      document.getElementById("hiddenSearch").value=e.value;
    }
  </script>
</head>
<body>
  <div data-collapse="none" data-animation="default" data-duration="400" data-contain="1" class="w-nav clj-navbar">
    <div class="w-container">
      <a href="/index" class="w-nav-brand w-clearfix clj-logo-container"><img width="60" src="/images/clojure-logo-120b.png" class="clj-logo" alt="Clojure logo">
        <div class="clj-logo-text">Clojure</div>
      </a>
      <nav role="navigation" class="w-nav-menu clj-nav-menu"><a href="/about/rationale" class="w-nav-link clj-nav-link">Overview</a><a href="/reference/documentation" class="w-nav-link clj-nav-link">Reference‚Äç</a><a href="/api/api" class="w-nav-link clj-nav-link">API</a><a href="/releases/downloads" class="w-nav-link clj-nav-link">Releases</a><a href="/guides/guides" class="w-nav-link clj-nav-link">Guides</a><a href="/community/success_stories" class="w-nav-link clj-nav-link">Community</a><a href="/dev/dev" class="w-nav-link clj-nav-link">Dev</a><a href="/news/news" class="w-nav-link clj-nav-link">News</a><a href="#" data-ix="search-click-trigger" class="w-nav-link clj-nav-link clj-nav-search">&#xed11;</a>
      </nav>
      <div class="w-nav-button clj-menu-button">
        <div class="w-icon-nav-menu"></div>
      </div>
    </div>
  </div>
  <div data-ix="hide-search" class="w-section clj-search-section">
    <div class="w-container">
      <div class="w-form clj-search-form-wrapper">
        <form id="wf-form-Search-Form" name="wf-form-Search-Form" action="https://duckduckgo.com/" method="get" onSubmit="searchClj(this)">
          <div class="w-row">
            <div class="w-col w-col-6 w-col-small-6">
              <input id="hiddenSearch" type="hidden" name="sites" value="www.clojure.org">
              <input name="q" id="q" type="text" placeholder="Search clojure.org reference, guides, and API" title="Search text" autofocus="autofocus" class="w-input clj-search-input">
            </div>
            <div class="w-col w-col-3 w-col-small-3 clj-search-type">
              <select name="searchType" id="searchType" class="w-select clj-search-type">
                <option value="www.clojure.org">clojure.org</option>
                <option value="ask.clojure.org">ask.clojure.org</option>
              </select>
            </div>
            <div class="w-col w-col-3 w-col-small-3">
              <input type="submit" value="Search" class="w-button clj-search-submit">
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

<div class="w-section clj-content-section">
  <div class="w-container">
    <div class="clj-section-nav-container">
      <div data-collapse="small" data-animation="default" data-duration="200" data-contain="1" class="w-nav clj-section-navbar">
        <div class="w-container">
          <nav role="navigation" class="w-nav-menu clj-section-nav-menu">
                <a href="/news/2023/12/15/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 15, 2023)</a>
                <a href="/news/2023/12/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 8, 2023)</a>
                <a href="/news/2023/12/01/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 1, 2023)</a>
                <a href="/news/2023/11/24/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 24, 2023)</a>
                <a href="/news/2023/11/17/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 17, 2023)</a>
                <a href="/news/2023/11/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 10, 2023)</a>
                <a href="/news/2023/11/03/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 3, 2023)</a>
                <a href="/news/2023/10/27/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 27, 2023)</a>
                <a href="/news/2023/10/23/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 23, 2023)</a>
                <a href="/news/2023/10/20/clojure-1-12-alpha5" class="w-nav-link clj-section-nav-item-link">Clojure 1.12.0-alpha5</a>
                <a href="/news/2023/10/16/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 16, 2023)</a>
                <a href="/news/2023/10/06/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 6, 2023)</a>
                <a href="/news/2023/09/29/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 29, 2023)</a>
                <a href="/news/2023/09/22/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 22, 2023)</a>
                <a href="/news/2023/09/15/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 15, 2023)</a>
                <a href="/news/2023/09/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 8, 2023)</a>
                <a href="/news/2023/09/01/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 1, 2023)</a>
                <a href="/news/2023/08/25/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 25, 2023)</a>
                <a href="/news/2023/08/18/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 18, 2023)</a>
                <a href="/news/2023/08/11/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 11, 2023)</a>
                <a href="/news/2023/08/06/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 6, 2023)</a>
                <a href="/news/2023/08/04/next-rich" class="w-nav-link clj-section-nav-item-link">(next Rich)</a>
                <a href="/news/2023/07/28/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 28, 2023)</a>
                <a href="/news/2023/07/20/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 20, 2023)</a>
                <a href="/news/2023/07/07/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 7, 2023)</a>
                <a href="/news/2023/06/30/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 30, 2023)</a>
                <a href="/news/2023/06/30/state-of-clojure-2023" class="w-nav-link clj-section-nav-item-link">State of Clojure 2023 Results</a>
                <a href="/news/2023/06/23/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 23, 2023)</a>
                <a href="/news/2023/06/16/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 16, 2023)</a>
                <a href="/news/2023/06/09/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 9, 2023)</a>
                <a href="/news/2023/06/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 2, 2023)</a>
                <a href="/news/2023/05/26/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 26, 2023)</a>
                <a href="/news/2023/05/19/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 19, 2023)</a>
                <a href="/news/2023/05/12/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 12, 2023)</a>
                <a href="/news/2023/05/05/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 5, 2023)</a>
                <a href="/news/2023/05/01/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 1, 2023)</a>
                <a href="/news/2023/04/28/introducing-morse" class="w-nav-link clj-section-nav-item-link">Introducing Morse</a>
                <a href="/news/2023/04/21/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 21, 2023)</a>
                <a href="/news/2023/04/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 14, 2023)</a>
                <a href="/news/2023/04/14/clojure-1-12-alpha2" class="w-nav-link clj-section-nav-item-link">Clojure 1.12.0-alpha2</a>
                <a href="/news/2023/04/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 10, 2023)</a>
                <a href="/news/2023/03/31/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 31, 2023)</a>
                <a href="/news/2023/03/27/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 27, 2023)</a>
                <a href="/news/2023/03/18/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 18, 2023)</a>
                <a href="/news/2023/03/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 10, 2023)</a>
                <a href="/news/2023/03/03/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 3, 2023)</a>
                <a href="/news/2023/02/27/clojure-survey-2023" class="w-nav-link clj-section-nav-item-link">State of Clojure 2023 Survey</a>
                <a href="/news/2023/02/26/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 26, 2023)</a>
                <a href="/news/2023/02/17/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 17, 2023)</a>
                <a href="/news/2023/02/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 10, 2023)</a>
                <a href="/news/2023/02/03/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 3, 2023)</a>
                <a href="/news/2023/01/30/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 30, 2023)</a>
                <a href="/news/2023/01/20/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 20, 2023)</a>
                <a href="/news/2023/01/13/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 13, 2023)</a>
                <a href="/news/2023/01/06/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 6, 2023)</a>
                <a href="/news/2022/12/22/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 22, 2022)</a>
                <a href="/news/2022/12/16/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 16, 2022)</a>
                <a href="/news/2022/12/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 8, 2022)</a>
                <a href="/news/2022/12/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 2, 2022)</a>
                <a href="/news/2022/11/23/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 23, 2022)</a>
                <a href="/news/2022/11/18/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 18, 2022)</a>
                <a href="/news/2022/11/11/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 11, 2022)</a>
                <a href="/news/2022/11/04/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 4, 2022)</a>
                <a href="/news/2022/10/28/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 28, 2022)</a>
                <a href="/news/2022/10/21/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 21, 2022)</a>
                <a href="/news/2022/10/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 14, 2022)</a>
                <a href="/news/2022/10/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 10, 2022)</a>
                <a href="/news/2022/10/03/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 3, 2022)</a>
                <a href="/news/2022/09/26/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sep 26, 2022)</a>
                <a href="/news/2022/09/16/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sep 16, 2022)</a>
                <a href="/news/2022/09/09/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sep 9, 2022)</a>
                <a href="/news/2022/09/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sep 2, 2022)</a>
                <a href="/news/2022/08/26/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 26, 2022)</a>
                <a href="/news/2022/08/19/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 19, 2022)</a>
                <a href="/news/2022/08/12/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 12, 2022)</a>
                <a href="/news/2022/08/05/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 5, 2022)</a>
                <a href="/news/2022/07/30/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 30, 2022)</a>
                <a href="/news/2022/07/15/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 15, 2022)</a>
                <a href="/news/2022/07/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 8, 2022)</a>
                <a href="/news/2022/07/01/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 1, 2022)</a>
                <a href="/news/2022/06/30/clojure1-12-alpha1" class="w-nav-link clj-section-nav-item-link">Clojure 1.12.0-alpha1</a>
                <a href="/news/2022/06/24/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 24, 2022)</a>
                <a href="/news/2022/06/17/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 17, 2022)</a>
                <a href="/news/2022/06/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 10, 2022)</a>
                <a href="/news/2022/06/02/state-of-clojure-2022" class="w-nav-link clj-section-nav-item-link">State of Clojure 2022 Results</a>
                <a href="/news/2022/06/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 2, 2022)</a>
                <a href="/news/2022/05/27/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 27, 2022)</a>
                <a href="/news/2022/05/20/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 20, 2022)</a>
                <a href="/news/2022/05/13/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 13, 2022)</a>
                <a href="/news/2022/05/06/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (May 6, 2022)</a>
                <a href="/news/2022/04/29/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 29, 2022)</a>
                <a href="/news/2022/04/22/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 22, 2022)</a>
                <a href="/news/2022/04/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 14, 2022)</a>
                <a href="/news/2022/04/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 8, 2022)</a>
                <a href="/news/2022/04/05/clojure-1-11-1" class="w-nav-link clj-section-nav-item-link">Clojure 1.11.1 release</a>
                <a href="/news/2022/04/01/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Apr 1, 2022)</a>
                <a href="/news/2022/03/25/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 25, 2022)</a>
                <a href="/news/2022/03/22/clojure-1-11-0" class="w-nav-link clj-section-nav-item-link">Clojure 1.11.0 release</a>
                <a href="/news/2022/03/20/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 20, 2022)</a>
                <a href="/news/2022/03/11/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 11, 2022)</a>
                <a href="/news/2022/03/04/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Mar 4, 2022)</a>
                <a href="/news/2022/02/28/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 28, 2022)</a>
                <a href="/news/2022/02/22/clojure-2022-survey" class="w-nav-link clj-section-nav-item-link">State of Clojure 2022 Survey</a>
                <a href="/news/2022/02/18/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 18, 2022)</a>
                <a href="/news/2022/02/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 14, 2022)</a>
                <a href="/news/2022/02/04/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Feb 4, 2022)</a>
                <a href="/news/2022/01/28/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 28, 2022)</a>
                <a href="/news/2022/01/21/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 21, 2022)</a>
                <a href="/news/2022/01/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 14, 2022)</a>
                <a href="/news/2022/01/07/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Jan 7, 2022)</a>
                <a href="/news/2021/12/23/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 23, 2021)</a>
                <a href="/news/2021/12/17/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 17, 2021)</a>
                <a href="/news/2021/12/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 10, 2021)</a>
                <a href="/news/2021/12/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Dec 2, 2021)</a>
                <a href="/news/2021/11/24/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 24, 2021)</a>
                <a href="/news/2021/11/19/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 19, 2021)</a>
                <a href="/news/2021/11/12/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 12, 2021)</a>
                <a href="/news/2021/11/5/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Nov 5, 2021)</a>
                <a href="/news/2021/10/29/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 29, 2021)</a>
                <a href="/news/2021/10/22/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 22, 2021)</a>
                <a href="/news/2021/10/14/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 14, 2021)</a>
                <a href="/news/2021/10/08/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Oct 8, 2021)</a>
                <a href="/news/2021/09/24/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 24, 2021)</a>
                <a href="/news/2021/09/17/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 17, 2021)</a>
                <a href="/news/2021/09/10/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 10, 2021)</a>
                <a href="/news/2021/09/03/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Sept 3, 2021)</a>
                <a href="/news/2021/08/27/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 27, 2021)</a>
                <a href="/news/2021/08/20/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 20, 2021)</a>
                <a href="/news/2021/08/13/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (Aug 13, 2021)</a>
                <a href="/news/2021/07/30/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 30, 2021)</a>
                <a href="/news/2021/07/23/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 23, 2021)</a>
                <a href="/news/2021/07/16/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 16, 2021)</a>
                <a href="/news/2021/07/09/source-libs-builds" class="w-nav-link clj-section-nav-item-link">Source Libs and Builds</a>
                <a href="/news/2021/07/09/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 9, 2021)</a>
                <a href="/news/2021/07/02/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (July 2, 2021)</a>
                <a href="/news/2021/06/25/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 25, 2021)</a>
                <a href="/news/2021/06/18/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 18, 2021)</a>
                <a href="/news/2021/06/11/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 11, 2021)</a>
                <a href="/news/2021/06/04/deref" class="w-nav-link clj-section-nav-item-link">Clojure Deref (June 4, 2021)</a>
                <a href="/news/2021/04/06/state-of-clojure-2021" class="w-nav-link clj-section-nav-item-link">State of Clojure 2021 Results</a>
                <a href="/news/2021/03/18/apis-serving-people-and-programs" class="w-nav-link clj-section-nav-item-link">Keyword argument functions now also accept maps</a>
                <a href="/news/2021/03/04/clojure1-10-3" class="w-nav-link clj-section-nav-item-link">Clojure 1.10.3 release</a>
                <a href="/news/2021/01/26/clojure1-10-2" class="w-nav-link clj-section-nav-item-link">Clojure 1.10.2 release</a>
                <a href="/news/2021/01/14/clojure-2021-survey" class="w-nav-link clj-section-nav-item-link">State of Clojure 2021 Survey</a>
                <a href="/news/2020/07/23/cognitect-joins-nubank" class="w-nav-link clj-section-nav-item-link">Cognitect Joins Nubank!</a>
                <a href="/news/2020/02/28/clojure-tap" class="w-nav-link clj-section-nav-item-link">Clojure Homebrew Tap</a>
                <a href="/news/2020/02/20/state-of-clojure-2020" class="w-nav-link clj-section-nav-item-link">State of Clojure 2020 Results</a>
                <a href="/news/2020/01/07/clojure-2020-survey" class="w-nav-link clj-section-nav-item-link">State of Clojure 2020 Survey</a>
                <a href="/news/2019/07/25/clojure-forum" class="w-nav-link clj-section-nav-item-link">Clojure Forum</a>
                <a href="/news/2019/06/06/clojure1-10-1" class="w-nav-link clj-section-nav-item-link">Clojure 1.10.1 release</a>
                <a href="/news/2019/05/16/jira-migration" class="w-nav-link clj-section-nav-item-link">JIRA Migration</a>
                <a href="/news/2019/02/04/state-of-clojure-2019" class="w-nav-link clj-section-nav-item-link">State of Clojure 2019 Results</a>
                <a href="/news/2019/01/07/clojure-2019-survey" class="w-nav-link clj-section-nav-item-link">State of Clojure 2019 Survey</a>
                <a href="/news/2018/12/17/clojure110" class="w-nav-link clj-section-nav-item-link">Clojure 1.10 release</a>
                <a href="/news/2018/03/19/state-of-clojure-2018" class="w-nav-link clj-section-nav-item-link">State of Clojure 2018 Results</a>
                <a href="/news/2018/01/05/git-deps" class="w-nav-link clj-section-nav-item-link">Git Deps for Clojure</a>
                <a href="/news/2017/12/08/clojure19" class="w-nav-link clj-section-nav-item-link">Clojure 1.9 is now available</a>
                <a href="/news/2017/01/31/state-of-clojure-2016" class="w-nav-link clj-section-nav-item-link">State of Clojure 2016 Results</a>
                <a href="/news/2016/05/23/introducing-clojure-spec" class="w-nav-link clj-section-nav-item-link">Introducing clojure.spec</a>
                <a href="/news/2016/01/28/state-of-clojure-2015" class="w-nav-link clj-section-nav-item-link">State of Clojure 2015 survey results</a>
                <a href="/news/2016/01/19/clojure18" class="w-nav-link clj-section-nav-item-link">Clojure 1.8 is now available</a>
                <a href="/news/2016/01/14/clojure-org-live" class="w-nav-link clj-section-nav-item-link">Welcome to the new clojure.org!</a>
                <a href="/news/2015/06/30/clojure-17" class="w-nav-link clj-section-nav-item-link">Clojure 1.7 is now available</a>
                <a href="/news/2014/08/06/transducers-are-coming" class="w-nav-link clj-section-nav-item-link">Transducers are Coming</a>
                <a href="/news/2013/06/28/clojure-clore-async-channels" class="w-nav-link clj-section-nav-item-link">Clojure core.async Channels</a>
                <a href="/news/2012/05/15/anatomy-of-reducer" class="w-nav-link clj-section-nav-item-link">Anatomy of a Reducer</a>
                <a href="/news/2012/05/08/reducers" class="w-nav-link clj-section-nav-item-link">Reducers - A Library and Model for Collection Processing</a>
                <a href="/news/2012/02/17/clojure-governance" class="w-nav-link clj-section-nav-item-link">Clojure Governance and How It Got That Way</a>
                <a href="/news/2011/07/22/introducing-clojurescript" class="w-nav-link clj-section-nav-item-link">Introducing ClojureScript</a>
          </nav>
          <div data-ix="toggle-section-nav-icon" class="w-nav-button w-clearfix clj-section-nav-toggle">
            <div class="clj-section-nav-text">Reducers - A Library and Model for Collection Processing</div>
            <div class="clj-section-nav-icon-closed">&#xeab2;</div>
            <div data-ix="init-hide-section-nav-icon-open" class="clj-section-nav-icon-open">&#xeab9;</div>
          </div>
        </div>
      </div>
    </div>

    <div class="clj-content-container">
      <h1>Reducers - A Library and Model for Collection Processing</h1>
      <p><em>08 May 2012</em><br/>
         <em>Rich Hickey</em></p>

      <div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>I&#8217;m happy to have <a href="https://github.com/clojure/clojure/commit/89e5dce0fdfec4bc09fa956512af08d8b14004f6">pushed</a> today the beginnings of a new Clojure library for higher-order manipulation of collections, based upon <em>reduce</em> and <em>fold</em>. Of course, Clojure already has Lisp&#8217;s <em>reduce</em>, which corresponds to the traditional <em>foldl</em> of functional programming. <em>reduce</em> is based upon sequences, as are many of the core functions of Clojure, like <em>map</em>, <em>filter</em> etc. So, what could be better? It&#8217;s a long story, so I&#8217;ll give you the ending first:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>There is a new namespace: clojure.core.reducers</p>
</li>
<li>
<p>It contains new versions of <code>map</code>, <code>filter</code> etc based upon transforming reducing functions - reducers</p>
</li>
<li>
<p>It contains a new function, <code>fold</code>, which is a parallel reduce+combine</p>
</li>
<li>
<p><code>fold</code> uses fork/join when working with (the existing!) Clojure vectors and maps</p>
</li>
<li>
<p>Your new parallel code has exactly the same shape as your existing seq-based code</p>
</li>
<li>
<p>The reducers are composable</p>
</li>
<li>
<p>Reducer implementations are primarily functional - no iterators</p>
</li>
<li>
<p>The model uses regular data structures, not 'parallel collections' or other OO malarkey</p>
</li>
<li>
<p>It&#8217;s fast, and can become faster still</p>
</li>
<li>
<p>This is work-in-progress</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_basics"><a class="anchor" href="#_basics"></a>Basics</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The story starts best at the bottom.</p>
</div>
<div class="paragraph">
<p>Clojure and other functional languages have a function called <em>map</em> that takes a function and a collection/list.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>What does it mean to map a function on a collection?</p>
</li>
<li>
<p>What are the common signatures?</p>
</li>
<li>
<p>Do they <a href="http://www.infoq.com/presentations/Simple-Made-Easy">complect</a> what to do with how to do it?</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The classic recursive functional definition of <em>map</em> is to apply <em>f</em> to the first thing in the collection, then <em>cons</em> the result onto the result of mapping <em>f</em> on the <em>rest</em> of the collection. This definition includes plenty of 'how':</p>
</div>
<div class="ulist">
<ul>
<li>
<p>How: mechanism - recursion</p>
</li>
<li>
<p>How: order - sequentially</p>
</li>
<li>
<p>How: laziness - (often) lazily</p>
</li>
<li>
<p>How: representation - making a list/seq, or other concrete collection</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Newer OO frameworks will often remove some of these problems by having map be a function of <code>fn * Coll &#8594; Coll</code> for any type of Coll, removing the sequentiality but also losing the laziness, and they still specify a concrete collection result.</p>
</div>
<div class="paragraph">
<p>Semantically, and minimally, <em>map</em> means "apply-to-all" e.g. <code>(map inc coll)</code> means give me a (logical) collection where every item is one greater than it was in <em>coll</em>. But, <em>map</em> doesn&#8217;t know how to navigate around every collection - the use of seqs/lists/iterators/streams etc forces a shared known representation. Nor does <code>inc</code> (or any function) know how to apply itself to every collection representation, else we could just say <code>(inc coll)</code>.</p>
</div>
<div class="paragraph">
<p>The only thing that knows how to apply a function to a collection is the collection itself.</p>
</div>
<div class="paragraph">
<p>What is the generic gateway to a collection applying things to itself? In Clojure, it is (internal) <em>reduce</em>.</p>
</div>
<div class="paragraph">
<p>We now have a new super-generalized and minimal abstraction for collections - a collection is some set of things that, when given a function to apply to its contents, can do so and give you the result, i.e. <em>a collection is (at minimum) <strong>reducible</strong></em>. In other words, you can call <em>reduce</em> on it.</p>
</div>
<div class="paragraph">
<p>Thus, <code>core.reducers/map</code> is a function of <code>fn * reducible &#8594; reducible</code>. (Whereas <code>core/map</code> is a function of <code>fn * seqable &#8594; seqable</code>.)</p>
</div>
<div class="paragraph">
<p>Now, how? If someone is going to ask the result of <code>(map inc coll)</code> to reduce itself with some function <em>f</em>, <em>map</em> must ultimately ask <em>coll</em> to do the job. Rather than pass <em>coll f</em>, <em>map</em> passes <em>coll</em> a new, transformed, reducing function that takes what <em>coll</em> supplies, calls <code>inc</code> on it, and then calls <em>f</em> on that.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(reduce + (r/map inc [1 2 3])) === (reduce (fn [ret x] (+ ret (inc x))) (+) [1 2 3])</code></pre>
</div>
</div>
<div class="paragraph">
<p>i.e. the core work of <em>map f</em> looks like this:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(fn [f1]
  (fn [ret v]
    (f1 ret (f v))))</code></pre>
</div>
</div>
<div class="paragraph">
<p>It takes a reducing function f1, and returns a new reducing function that calls f1 after applying f to its input.</p>
</div>
<div class="paragraph">
<p>Thus you can define <em>map</em> as a function of <code>fn * reducible &#8594; reducible</code> by merely transforming the reducing function. Mapping is semantically a function of the function of <em><strong>one step</strong></em> of a reduction. This transformation is decomplected from both representation and order. We call functions such as this <em>map</em>, that take a reducible, and in turn return something reducible via transformation of the reducing function, reducers.</p>
</div>
<div class="paragraph">
<p>Now let&#8217;s revisit the hows above&#8230;&#8203;</p>
</div>
<div class="ulist">
<ul>
<li>
<p>How: mechanism - functional transformation of reducing function</p>
</li>
<li>
<p>How: order - doesn&#8217;t know</p>
</li>
<li>
<p>How: laziness - doesn&#8217;t know</p>
</li>
<li>
<p>How: representation - doesn&#8217;t build anything</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>It is important to note that now, when <code>(map f coll)</code> is called nothing happens except the creation of a recipe for a new collection, a recipe that is itself reducible. No work is done yet to the contained elements and no concrete collection is produced.</p>
</div>
<div class="paragraph">
<p>The beautiful thing is that this 'transformation of reducing function' mechanism also works for many of the traditional seq functions, like <em>filter</em>, <em>take</em>, <em>flatten</em> etc. Note the fact that <em>filter</em> is (potentially) contractive, and <em>flatten</em> is (potentially) expansive per step - the mechanism is general and not limited to 1:1 transformations. And other reducer definitions are as pretty as map&#8217;s - none of the imperativeness of iterators, or generators with yield.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_ok_so_wheres_my_cake"><a class="anchor" href="#_ok_so_wheres_my_cake"></a>Ok, So Where&#8217;s My Cake?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>If map doesn&#8217;t do the work of mapping, but merely creates a recipe, when does the work get done? When you reduce its result:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(require '[clojure.core.reducers :as r])
(reduce + (r/filter even? (r/map inc [1 1 1 2])))
;=&gt; 6</code></pre>
</div>
</div>
<div class="paragraph">
<p>That should look familiar - it&#8217;s the same named functions, applied in the same order, with the same arguments, producing the same result as the Clojure&#8217;s seq-based fns. The difference is that, reduce being eager, and these reducers fns being out of the seq game, there&#8217;s no per-step allocation overhead, so it&#8217;s faster. Laziness is great when you need it, but when you don&#8217;t you shouldn&#8217;t have to pay for it.</p>
</div>
<div class="paragraph">
<p>The reducer fns are curried, and they can be easily composed:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">;;red is a reducer awaiting a collection
(def red (comp (r/filter even?) (r/map inc)))
(reduce + (red [1 1 1 2]))
;=&gt; 6</code></pre>
</div>
</div>
<div class="paragraph">
<p>Thus reduction 'recipes' (reducers) are first class.</p>
</div>
<div class="paragraph">
<p>What if we <em>want</em> a collection result? It&#8217;s good to know that into uses reduce:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(into [] (r/filter even? (r/map inc [1 1 1 2])))
;=&gt; [2 2 2]</code></pre>
</div>
</div>
<div class="paragraph">
<p>Note there are no intermediate collections produced.</p>
</div>
<div class="paragraph">
<p>And, of course, you don&#8217;t always want a result of the same collection type:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(into #{} (r/filter even? (r/map inc [1 1 1 2])))
;=&gt; #{2}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_simplicity_is_opportunity"><a class="anchor" href="#_simplicity_is_opportunity"></a>Simplicity is Opportunity</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Decomplecting the core operations from representation and laziness has given us some speed, but what about the elimination of order? It should open the door to parallelism, but we are stuck with the semantics of <em>reduce</em> being <em>foldl</em>, i.e. it uses an accumulator and is <a href="http://vimeo.com/6624203">fundamentally serial</a>. We can parallelize reduction by using independent sub-reductions and combining their results, and the library defines a function that does just that: <em><strong>fold</strong></em>.</p>
</div>
<div class="paragraph">
<p>The primary signature of fold takes a combining function, a reducing function, and a collection and returns the result of combining the results of reducing subsegments of the collection, potentially in parallel. Obviously if the work is to occur in parallel, the functions must be associative, but they need not be commutative - <em>fold</em> preserves order. Note that there is no initial 'seed' or 'accumulator' value, as there may be with reduce and foldl. But, since the subsegments are themselves reduced (with <em>reduce</em>), it raises the question as to what supplies the seed values for those reductions?</p>
</div>
<div class="paragraph">
<p>The combining function (an associative binary fn) must have some 'identity' value, a value that, when combined with some X, yields X. 0 is an identity value for +, as is 1 for *. The combining fn must supply an identity value when called with no arguments (as do + and *). It will be called with no arguments to supply a seed for each leaf reduction. There is a fn (called <em>monoid</em>, shh!) to help you build such combining functions.</p>
</div>
<div class="paragraph">
<p>If no combining fn is supplied, the reducing fn is used. Simple folds look like reduces:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(r/fold + [1 2 3 4])
;=&gt; 10</code></pre>
</div>
</div>
<div class="paragraph">
<p>But by promising less (i.e. not promising stepwise reduction from left or right) <em>fold</em> can do more - run in parallel. It does this when the collection is amenable to parallel subdivision. Ideal candidates are data structures built from trees. Clojure vectors and maps are trees, and have parallel implementations of <em>fold</em> based upon the <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html">ForkJoin framework</a>.</p>
</div>
<div class="paragraph">
<p>What if the underlying collection is not amenable (e.g. is a sequence)? <em>fold</em> just devolves into <em>reduce</em>, producing the same semantic, if not physical, result.</p>
</div>
<div class="paragraph">
<p>There&#8217;s a tremendous amount you can accomplish with this reduce+combine strategy, especially when you consider that the map, filter etc reducers will not constitute independent layers of parallel jobs - they just transform the reducing fn working on the leaves.</p>
</div>
<div class="paragraph">
<p>You can have a look at the <code>cat</code> function included in the library for an interesting example of a combining fn. cat quickly gathers up the fold results, forming a binary tree with the reductions as leaves. It returns a highly abstract, yet now quite useful 'collection' that is just counted, reducible, foldable and seqable.</p>
</div>
<div class="paragraph">
<p>Oh yeah, perf. Don&#8217;t be surprised to see things become 2-3X faster, or more with more cores.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_more_opportunity_i_e_work"><a class="anchor" href="#_more_opportunity_i_e_work"></a>More Opportunity (i.e. Work)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>As much fun as this is, there&#8217;s still more fun to be had by those so inclined:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>There are more seq fns that could become reducer fns</p>
</li>
<li>
<p>Given multiple iterable sources, we should be able to build a multi-reducible, recovering the multi-input capabilities of map.</p>
</li>
<li>
<p>Arrays, arraylists, strings etc are all amenable to parallel fold.</p>
<div class="ulist">
<ul>
<li>
<p>fork/join-based vector fold is 14 lines, so these are not difficult.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Those IFn.LLL, DDD etc primitive-taking function interfaces can now spring to life.</p>
<div class="ulist">
<ul>
<li>
<p>We should be able to build primitive-transmitting reducer function pipelines.</p>
</li>
<li>
<p>We&#8217;d then need to look for and use them in the reductions of arrays and vectors of primitives</p>
</li>
</ul>
</div>
</li>
<li>
<p>Internal reduce solves the lazily dangling open resource problem, a problem solved similarly by <a href="http://www.haskell.org/haskellwiki/Enumerator_and_iteratee">Haskell&#8217;s enumerators and iteratees</a>. (Note that unlike iteratees, reducers do not allocate wrappers per step)</p>
<div class="ulist">
<ul>
<li>
<p>We need reducible I/O sources.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_summary"><a class="anchor" href="#_summary"></a>Summary</h2>
<div class="sectionbody">
<div class="paragraph">
<p>By adopting an alternative view of collections as reducible, rather than seqable things, we can get a complementary set of fundamental operations that tradeoff laziness for parallelism, while retaining the same high-level, functional programming model. Because the two models retain the same shape, we can easily choose whichever is appropriate for the task at hand.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_follow_up"><a class="anchor" href="#_follow_up"></a>Follow Up</h2>
<div class="sectionbody">
<div class="paragraph">
<p>See the follow up <a href="xref/../../../05/15/anatomy-of-reducer">blog post</a> for more details about what constitutes a reducer, as well as some background about the library.</p>
</div>
<div class="paragraph">
<p>Rich</p>
</div>
</div>
</div>
    </div>
  </div>
</div>

  <div class="w-section clj-footer">
    <div class="w-container clj-footer-links-container">
      <div class="w-row">
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Community</h6>
            <a href="/community/resources" class="clj-footer-link">Resources</a>
            <a href="/community/contributing" class="clj-footer-link">Contributing</a>
            <a href="/community/companies" class="clj-footer-link">Companies</a>
            <a href="/community/contributing_site" class="clj-footer-link">Site</a>
          <h6 class="clj-footer-heading">Legal</h6>
            <a href="/community/license" class="clj-footer-link">License</a>
            <a href="/privacy" class="clj-footer-link">Privacy Policy</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Documentation</h6>
            <a href="/about/rationale" class="clj-footer-link">Overview</a>
            <a href="/reference/documentation" class="clj-footer-link">Reference</a>
            <a href="/api/api" class="clj-footer-link">API</a>
            <a href="/guides/guides" class="clj-footer-link">Guides</a>
            <a href="/community/libraries" class="clj-footer-link">Libraries &amp; Tools</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Updates</h6>
            <a href="/news/news" class="clj-footer-link">News</a>
            <a href="/community/events" class="clj-footer-link">Events</a>
          <h6 class="clj-footer-heading">ETC</h6>
            <a href="https://www.youtube.com/user/ClojureTV" class="clj-footer-link">ClojureTV</a>
            <a href="/community/books" class="clj-footer-link">Books</a>
            <a href="/community/swag" class="clj-footer-link">Swag</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Code</h6>
            <a href="/releases/downloads" class="clj-footer-link">Releases</a>
            <a href="https://github.com/clojure/clojure/" class="clj-footer-link">Source</a>
            <a href="http://clojurescript.org" class="clj-footer-link">ClojureScript</a>
            <a href="/about/clojureclr" class="clj-footer-link">ClojureCLR</a>
        </div>
      </div>
    </div>
    <div class="w-container clj-footer-legal-container">
      <div class="w-clearfix clj-footer-legal">
        <div class="clj-footer-logo">&nbsp;</div>
        <div class="clj-footer-legal-links">
          <div class="clj-footer-copyright">Copyright 2008-2022 Rich Hickey | <a class="clj-footer-sub-link" href="/privacy">Privacy Policy</a><br/>Logo &amp; site design by Tom Hickey
          </div>
          <div class="clj-footer-designed-by">Published 2023-12-18<br/>Update <a class="clj-footer-sub-link" href="https://github.com/clojure/clojure-site/blob/master/content/news/2012/05/08/reducers.adoc">this page</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script type="text/javascript" src="/js/webflow.js"></script>
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script>
  $(document).ready( (event) => {
    $('pre code').each((index, obj) => {
      $(obj).addClass($(obj).attr("data-lang"));
      hljs.highlightBlock(obj);
    });
  });
  </script>
  <!--[if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
</body>
</html>
