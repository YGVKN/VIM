<!DOCTYPE html>
<!-- This site was created in Webflow. http://www.webflow.com-->
<!-- Last Published: Fri Nov 13 2015 01:48:45 GMT+0000 (UTC) -->
<html lang="en" data-wf-site="56414d6fc8c27cad0f4e12e7" data-wf-page="5643ac587b1f28dc58ed6b89">
<head>
  <meta charset="utf-8">
  <title>Clojure - Vars and the Global Environment</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="generator" content="Webflow">
  <meta name="google-site-verification" content="a30CDuC9UBifM7EL575LK9a4TEE6mNfWbKqXIoSZChg" />
  <meta name="google-site-verification" content="iXqpntr4CN3JRM1sVm5D_YzZw8bFRizBaTVycwqii2E" />
  <meta name="keywords" content="clojure,programming" />
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&family=PT+Serif:ital@0;1&&family=Source+Code+Pro:wght@500&display=swap">
  <link rel="stylesheet" type="text/css" href="/css/normalize.css">
  <link rel="stylesheet" type="text/css" href="/css/webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/clojureorg.webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/asciidoctor-mod.css">
  <link type="text/css" href="/css/default-en.css" rel="stylesheet">
  <link type="text/css" href="/css/default.css" rel="stylesheet">
  <link type="text/css" href="/css/search-result.css" rel="stylesheet">
  <link rel="alternate" type="application/atom+xml" title="News" href="/feed.xml" />
  <script type="text/javascript" src="/js/modernizr.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/images/clojure-logo-icon-32.png">
  <link rel="apple-touch-icon" href="/images/clojure-logo-icon-256.png">
  <!-- Matomo -->
  <script>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
      var u="https://cognitect.matomo.cloud/";
      _paq.push(['setTrackerUrl', u+'matomo.php']);
      _paq.push(['setSiteId', '9']);
      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src='//cdn.matomo.cloud/cognitect.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
    })();
  </script>
<!-- End Matomo Code -->
  <script type="text/javascript">
    function searchClj(obj) {
      let e = document.getElementById("searchType");
      document.getElementById("hiddenSearch").value=e.value;
    }
  </script>
</head>
<body>
  <div data-collapse="none" data-animation="default" data-duration="400" data-contain="1" class="w-nav clj-navbar">
    <div class="w-container">
      <a href="/index" class="w-nav-brand w-clearfix clj-logo-container"><img width="60" src="/images/clojure-logo-120b.png" class="clj-logo" alt="Clojure logo">
        <div class="clj-logo-text">Clojure</div>
      </a>
      <nav role="navigation" class="w-nav-menu clj-nav-menu"><a href="/about/rationale" class="w-nav-link clj-nav-link">Overview</a><a href="/reference/documentation" class="w-nav-link clj-nav-link">Reference‚Äç</a><a href="/api/api" class="w-nav-link clj-nav-link">API</a><a href="/releases/downloads" class="w-nav-link clj-nav-link">Releases</a><a href="/guides/guides" class="w-nav-link clj-nav-link">Guides</a><a href="/community/success_stories" class="w-nav-link clj-nav-link">Community</a><a href="/dev/dev" class="w-nav-link clj-nav-link">Dev</a><a href="/news/news" class="w-nav-link clj-nav-link">News</a><a href="#" data-ix="search-click-trigger" class="w-nav-link clj-nav-link clj-nav-search">&#xed11;</a>
      </nav>
      <div class="w-nav-button clj-menu-button">
        <div class="w-icon-nav-menu"></div>
      </div>
    </div>
  </div>
  <div data-ix="hide-search" class="w-section clj-search-section">
    <div class="w-container">
      <div class="w-form clj-search-form-wrapper">
        <form id="wf-form-Search-Form" name="wf-form-Search-Form" action="https://duckduckgo.com/" method="get" onSubmit="searchClj(this)">
          <div class="w-row">
            <div class="w-col w-col-6 w-col-small-6">
              <input id="hiddenSearch" type="hidden" name="sites" value="www.clojure.org">
              <input name="q" id="q" type="text" placeholder="Search clojure.org reference, guides, and API" title="Search text" autofocus="autofocus" class="w-input clj-search-input">
            </div>
            <div class="w-col w-col-3 w-col-small-3 clj-search-type">
              <select name="searchType" id="searchType" class="w-select clj-search-type">
                <option value="www.clojure.org">clojure.org</option>
                <option value="ask.clojure.org">ask.clojure.org</option>
              </select>
            </div>
            <div class="w-col w-col-3 w-col-small-3">
              <input type="submit" value="Search" class="w-button clj-search-submit">
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

<div class="w-section clj-content-section">
  <div class="w-container">
    <div class="clj-section-nav-container">
      <div data-collapse="small" data-animation="default" data-duration="200" data-contain="1" class="w-nav clj-section-navbar">
        <div class="w-container">
          <nav role="navigation" class="w-nav-menu clj-section-nav-menu">
            <a href="reader" class="w-nav-link clj-section-nav-item-link">The Reader</a>
            <a href="repl_and_main" class="w-nav-link clj-section-nav-item-link">The REPL and main</a>
            <a href="evaluation" class="w-nav-link clj-section-nav-item-link">Evaluation</a>
            <a href="special_forms" class="w-nav-link clj-section-nav-item-link">Special Forms</a>
            <a href="macros" class="w-nav-link clj-section-nav-item-link">Macros</a>
            <a href="other_functions" class="w-nav-link clj-section-nav-item-link">Other Functions</a>
            <a href="data_structures" class="w-nav-link clj-section-nav-item-link">Data Structures</a>
            <a href="datatypes" class="w-nav-link clj-section-nav-item-link">Datatypes</a>
            <a href="sequences" class="w-nav-link clj-section-nav-item-link">Sequences</a>
            <a href="transients" class="w-nav-link clj-section-nav-item-link">Transients</a>
            <a href="transducers" class="w-nav-link clj-section-nav-item-link">Transducers</a>
            <a href="multimethods" class="w-nav-link clj-section-nav-item-link">Multimethods and Hierarchies</a>
            <a href="protocols" class="w-nav-link clj-section-nav-item-link">Protocols</a>
            <a href="metadata" class="w-nav-link clj-section-nav-item-link">Metadata</a>
            <a href="namespaces" class="w-nav-link clj-section-nav-item-link">Namespaces</a>
            <a href="libs" class="w-nav-link clj-section-nav-item-link">Libs</a>
            <a href="vars" class="w-nav-link clj-section-nav-item-link">Vars and Environments</a>
            <a href="refs" class="w-nav-link clj-section-nav-item-link">Refs and Transactions</a>
            <a href="agents" class="w-nav-link clj-section-nav-item-link">Agents</a>
            <a href="atoms" class="w-nav-link clj-section-nav-item-link">Atoms</a>
            <a href="reducers" class="w-nav-link clj-section-nav-item-link">Reducers</a>
            <a href="java_interop" class="w-nav-link clj-section-nav-item-link">Java Interop</a>
            <a href="compilation" class="w-nav-link clj-section-nav-item-link">Compilation and Class Generation</a>
            <a href="other_libraries" class="w-nav-link clj-section-nav-item-link">Other Libraries</a>
            <a href="lisps" class="w-nav-link clj-section-nav-item-link">Differences with Lisps</a>
            <a href="deps_and_cli" class="w-nav-link clj-section-nav-item-link">Deps and CLI</a>
            <a href="deps_edn" class="w-nav-link clj-section-nav-item-link">deps.edn</a>
          </nav>
          <div data-ix="toggle-section-nav-icon" class="w-nav-button w-clearfix clj-section-nav-toggle">
            <div class="clj-section-nav-text">Vars and Environments</div>
            <div class="clj-section-nav-icon-closed">&#xeab2;</div>
            <div data-ix="init-hide-section-nav-icon-open" class="clj-section-nav-icon-open">&#xeab9;</div>
          </div>
        </div>
      </div>
    </div>
    <div class="clj-content-container">

      <h1>Vars and the Global Environment</h1>

      <div id="preamble">
<div class="sectionbody">
<div id="toc" class="toc">
<div id="toctitle" class="title">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#conveyance">Binding conveyance</a></li>
<li><a href="#set">(<strong>set!</strong> var-symbol expr)</a></li>
<li><a href="#interning">Interning</a></li>
<li><a href="#local-vars">Non-interned Vars</a></li>
<li><a href="#metadata">Var metadata</a></li>
<li><a href="#related">Related functions</a></li>
</ul>
</div>
<div class="paragraph">
<p>Clojure is a practical language that recognizes the occasional need to maintain a persistent reference to a changing value and provides 4 distinct mechanisms for doing so in a controlled manner - Vars, <a href="refs">Refs</a>, <a href="agents">Agents</a> and <a href="atoms">Atoms</a>. Vars provide a mechanism to refer to a mutable storage location that can be dynamically rebound (to a new storage location) on a per-thread basis. Every Var can (but needn&#8217;t) have a root binding, which is a binding that is shared by all threads that do not have a per-thread binding. Thus, the value of a Var is the value of its per-thread binding, or, if it is not bound in the thread requesting the value, the value of the root binding, if any.</p>
</div>
<div class="paragraph">
<p>The special form <code>def</code> creates (and <a href="vars#interning">interns</a>) a Var. If the Var did not already exist and no initial value is supplied, the var is unbound:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">user=&gt; (def x)
#'user/x
user=&gt; x
#object[clojure.lang.Var$Unbound 0x14008db3 "Unbound: #'user/x"]</code></pre>
</div>
</div>
<div class="paragraph">
<p>Supplying an initial value binds the root (even if it was already bound).</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">user=&gt; (def x 1)
#'user/x

user=&gt; x
1</code></pre>
</div>
</div>
<div class="paragraph">
<p>By default Vars are static, but Vars can be marked as dynamic to allow per-thread bindings via the macro <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/binding">binding</a>. Within each thread they obey a stack discipline:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">user=&gt; (def ^:dynamic x 1)
user=&gt; (def ^:dynamic y 1)
user=&gt; (+ x y)
2

user=&gt; (binding [x 2 y 3]
         (+ x y))
5

user=&gt; (+ x y)
2</code></pre>
</div>
</div>
<div class="paragraph">
<p>Bindings created with <code>binding</code> cannot be seen by any other thread. Likewise, bindings created with <code>binding</code> can be assigned to, which provides a means for a nested context to communicate with code before it is placed on the call stack. This capability is opt-in only by setting a metadata tag: <code>^:dynamic</code> to true as in the code block above. There are scenarios that one might wish to redefine static Vars within a context and Clojure (since version 1.3) provides the functions <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-redefs">with-redefs</a> and <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-redefs-fn">with-redefs-fn</a> for such purposes.</p>
</div>
<div class="paragraph">
<p>Functions defined with <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defn">defn</a> are stored in Vars, allowing for the re-definition of functions in a running program. This also enables many of the possibilities of aspect- or context-oriented programming. For instance, you could wrap a function with logging behavior only in certain call contexts or threads.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="conveyance"><a class="anchor" href="#conveyance"></a>Binding conveyance</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Some Clojure concurrency functions (futures, <a href="agents">agents</a>) provide "binding conveyance", which allows the current set of dynamic bindings to be conveyed to another thread for the purpose of continuing work asynchronously with the same environment. This functionality is provided by <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/future">future</a>, <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/send">send</a>, <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/send-off">send-off</a>, and <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/pmap">pmap</a>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">(def ^:dynamic *num* 1)
(binding [*num* 2] (future (println *num*)))
;; prints "2", not "1"</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="set"><a class="anchor" href="#set"></a>(<strong>set!</strong> var-symbol expr)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Assignment special form.</p>
</div>
<div class="paragraph">
<p>When the first operand is a symbol, it must resolve to a global var. The value of the var&#8217;s current thread binding is set to the value of expr. Currently, it is an error to attempt to set the root binding of a var using set!, i.e. var assignments are thread-local. In all cases the value of expr is returned.</p>
</div>
<div class="paragraph">
<p>Note - <em>you cannot assign to function params or local bindings. Only Java fields, Vars, Refs and Agents are mutable in Clojure</em>.</p>
</div>
<div class="paragraph">
<p>Using <a href="http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/set!"><code>set!</code></a> for Java fields is documented in <a href="java_interop#set">Java Interop</a>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="interning"><a class="anchor" href="#interning"></a>Interning</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Namespace system maintains global maps of symbols to Var objects <em>(see <a href="namespaces">Namespaces</a>)</em>. If a <code>def</code> expression does not find an interned entry in the current namespace for the symbol being def-ed, it creates one, otherwise it uses the existing Var. This find-or-create process is called interning. This means that, unless they have been unmap-ed, Var objects are stable references and need not be looked up every time. It also means that namespaces constitute a global environment in which, as described in <a href="evaluation">Evaluation</a>, the compiler attempts to resolve all free symbols as Vars.</p>
</div>
<div class="paragraph">
<p>The <a href="special_forms#var">var</a> special form or the <code>#'</code> reader macro <em>(see <a href="reader">Reader</a>)</em> can be used to get an interned Var object instead of its current value.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="local-vars"><a class="anchor" href="#local-vars"></a>Non-interned Vars</h2>
<div class="sectionbody">
<div class="paragraph">
<p>It is possible to create vars that are not interned by using <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-local-vars">with-local-vars</a>. These vars will not be found during free symbol resolution, and their values have to be accessed manually. But they can serve as useful thread-local mutable cells.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="metadata"><a class="anchor" href="#metadata"></a>Var metadata</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The forms that create vars <code>def</code>, <code>defn</code>, <code>defmacro</code>, etc use a standard set of var <a href="metadata">metadata</a> to describe vars. Some of these forms use explicit syntax to accept values stored in the metadata, but generally you can also supply that metadata as a map on the var symbol.</p>
</div>
<div class="paragraph">
<p>Common var metadata keys (all optional at var definition):</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>:doc</code> - a string documenting the var, usually set by the docstring parameter</p>
</li>
<li>
<p><code>:added</code> - a string documenting the version when this var was added</p>
</li>
<li>
<p><code>:private</code> - a boolean flag, often set by <code>defn-</code>, used by the author to state the intent that this var is an implementation detail. Private vars are globally accessible but will not be referred or listed in <code>ns-</code>&#8230;&#8203; functions which filter to non-private vars.</p>
</li>
<li>
<p><code>:arglists</code> - a coll of arglists, will be generated automatically if not supplied, most often used to document macro syntax</p>
</li>
<li>
<p><code>:macro</code> - a boolean flag added by <code>defmacro</code> automatically (not typically used directly)</p>
</li>
<li>
<p><code>:tag</code> - a type identifier (usually a class) for the type of the value in the var or the return type of a function held in the var. Note that var metadata is evaluated, so type hints like <code>^long</code> on the var will evaluate to the <code>long</code> function, not a <code>long</code> primitive type hint. Generally, it is preferred to use a type hint on the arglist for defn vars instead.</p>
</li>
<li>
<p><code>:test</code> - the <code>clojure.test</code> framework attaches unit tests to vars using this key (not typically used directly)</p>
</li>
<li>
<p><code>:dynamic</code> - indicates a var may be dynamically rebound in a thread context (see above). Dynamic vars will not be direct linked when compiling with direct linking.</p>
</li>
<li>
<p><code>:redef</code> - indicates that a var should not be direct linked when compiling with direct linking (thus allowing it to be redefined)</p>
</li>
<li>
<p><code>:static</code> - no longer used (originally vars were dynamic by default, now they are static by default)</p>
</li>
<li>
<p><code>:const</code> - indicates that a var is a compile-time constant and the compiler can inline the value into code that uses it. Note: this is rarely needed and only works with constants at compile time (read, but not evaluated), such as numbers, strings, etc (NOT classes, functions, ref types, etc). Redefining or dynamically binding a const var will not affect code that consumes the var that has already been compiled and loaded in the runtime.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Also see <a href="compilation#_compiler_options">Compiler Options</a> for more information about direct linking and metadata elision during compilation.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="related"><a class="anchor" href="#related"></a>Related functions</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Variants of <code>def</code>: <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defn">defn</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defn-">defn-</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/definline">definline</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defmacro">defmacro</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defmethod">defmethod</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defmulti">defmulti</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defonce">defonce</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/defstruct">defstruct</a><br>
Working with interned Vars: <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/declare">declare</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/intern">intern</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/binding">binding</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/find-var">find-var</a> <a href="special_forms#var">var</a><br>
Working with Var objects: <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-local-vars">with-local-vars</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/var-get">var-get</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/var-set">var-set</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/alter-var-root">alter-var-root</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/var?">var?</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-redefs">with-redefs</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/with-redefs-fn">with-redefs-fn</a><br>
Var validators: <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/set-validator!">set-validator!</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/get-validator">get-validator</a><br>
Using Var metadata: <a href="https://clojure.github.io/clojure/clojure.repl-api.html#clojure.repl/doc">doc</a> <a href="https://clojure.github.io/clojure/clojure.repl-api.html#clojure.repl/find-doc">find-doc</a> <a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/test">test</a></p>
</div>
</div>
</div>


<div class="clj-prev-next-container">
  <a href="libs" class="clj-prev-link"><span class="clj-prevnext-link-icon">&#xeab5;</span>&nbsp;Libs</a>
  <a href="refs" class="clj-next-link">Refs and Transactions&nbsp;<span class="clj-prevnext-link-icon">&#xeab8;</span></a>
</div>

    </div>
  </div>
</div>

  <div class="w-section clj-footer">
    <div class="w-container clj-footer-links-container">
      <div class="w-row">
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Community</h6>
            <a href="/community/resources" class="clj-footer-link">Resources</a>
            <a href="/community/contributing" class="clj-footer-link">Contributing</a>
            <a href="/community/companies" class="clj-footer-link">Companies</a>
            <a href="/community/contributing_site" class="clj-footer-link">Site</a>
          <h6 class="clj-footer-heading">Legal</h6>
            <a href="/community/license" class="clj-footer-link">License</a>
            <a href="/privacy" class="clj-footer-link">Privacy Policy</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Documentation</h6>
            <a href="/about/rationale" class="clj-footer-link">Overview</a>
            <a href="/reference/documentation" class="clj-footer-link">Reference</a>
            <a href="/api/api" class="clj-footer-link">API</a>
            <a href="/guides/guides" class="clj-footer-link">Guides</a>
            <a href="/community/libraries" class="clj-footer-link">Libraries &amp; Tools</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Updates</h6>
            <a href="/news/news" class="clj-footer-link">News</a>
            <a href="/community/events" class="clj-footer-link">Events</a>
          <h6 class="clj-footer-heading">ETC</h6>
            <a href="https://www.youtube.com/user/ClojureTV" class="clj-footer-link">ClojureTV</a>
            <a href="/community/books" class="clj-footer-link">Books</a>
            <a href="/community/swag" class="clj-footer-link">Swag</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Code</h6>
            <a href="/releases/downloads" class="clj-footer-link">Releases</a>
            <a href="https://github.com/clojure/clojure/" class="clj-footer-link">Source</a>
            <a href="http://clojurescript.org" class="clj-footer-link">ClojureScript</a>
            <a href="/about/clojureclr" class="clj-footer-link">ClojureCLR</a>
        </div>
      </div>
    </div>
    <div class="w-container clj-footer-legal-container">
      <div class="w-clearfix clj-footer-legal">
        <div class="clj-footer-logo">&nbsp;</div>
        <div class="clj-footer-legal-links">
          <div class="clj-footer-copyright">Copyright 2008-2022 Rich Hickey | <a class="clj-footer-sub-link" href="/privacy">Privacy Policy</a><br/>Logo &amp; site design by Tom Hickey
          </div>
          <div class="clj-footer-designed-by">Published 2023-12-18<br/>Update <a class="clj-footer-sub-link" href="https://github.com/clojure/clojure-site/blob/master/content/reference/vars.adoc">this page</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script type="text/javascript" src="/js/webflow.js"></script>
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script>
  $(document).ready( (event) => {
    $('pre code').each((index, obj) => {
      $(obj).addClass($(obj).attr("data-lang"));
      hljs.highlightBlock(obj);
    });
  });
  </script>
  <!--[if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
</body>
</html>
