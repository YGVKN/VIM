<!DOCTYPE html>
<!-- This site was created in Webflow. http://www.webflow.com-->
<!-- Last Published: Fri Nov 13 2015 01:48:45 GMT+0000 (UTC) -->
<html lang="en" data-wf-site="56414d6fc8c27cad0f4e12e7" data-wf-page="5643ac587b1f28dc58ed6b89">
<head>
  <meta charset="utf-8">
  <title>Clojure - deps.edn Reference</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="generator" content="Webflow">
  <meta name="google-site-verification" content="a30CDuC9UBifM7EL575LK9a4TEE6mNfWbKqXIoSZChg" />
  <meta name="google-site-verification" content="iXqpntr4CN3JRM1sVm5D_YzZw8bFRizBaTVycwqii2E" />
  <meta name="keywords" content="clojure,programming" />
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&family=PT+Serif:ital@0;1&&family=Source+Code+Pro:wght@500&display=swap">
  <link rel="stylesheet" type="text/css" href="/css/normalize.css">
  <link rel="stylesheet" type="text/css" href="/css/webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/clojureorg.webflow.css">
  <link rel="stylesheet" type="text/css" href="/css/asciidoctor-mod.css">
  <link type="text/css" href="/css/default-en.css" rel="stylesheet">
  <link type="text/css" href="/css/default.css" rel="stylesheet">
  <link type="text/css" href="/css/search-result.css" rel="stylesheet">
  <link rel="alternate" type="application/atom+xml" title="News" href="/feed.xml" />
  <script type="text/javascript" src="/js/modernizr.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/images/clojure-logo-icon-32.png">
  <link rel="apple-touch-icon" href="/images/clojure-logo-icon-256.png">
  <!-- Matomo -->
  <script>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
      var u="https://cognitect.matomo.cloud/";
      _paq.push(['setTrackerUrl', u+'matomo.php']);
      _paq.push(['setSiteId', '9']);
      var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src='//cdn.matomo.cloud/cognitect.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
    })();
  </script>
<!-- End Matomo Code -->
  <script type="text/javascript">
    function searchClj(obj) {
      let e = document.getElementById("searchType");
      document.getElementById("hiddenSearch").value=e.value;
    }
  </script>
</head>
<body>
  <div data-collapse="none" data-animation="default" data-duration="400" data-contain="1" class="w-nav clj-navbar">
    <div class="w-container">
      <a href="/index" class="w-nav-brand w-clearfix clj-logo-container"><img width="60" src="/images/clojure-logo-120b.png" class="clj-logo" alt="Clojure logo">
        <div class="clj-logo-text">Clojure</div>
      </a>
      <nav role="navigation" class="w-nav-menu clj-nav-menu"><a href="/about/rationale" class="w-nav-link clj-nav-link">Overview</a><a href="/reference/documentation" class="w-nav-link clj-nav-link">Reference‚Äç</a><a href="/api/api" class="w-nav-link clj-nav-link">API</a><a href="/releases/downloads" class="w-nav-link clj-nav-link">Releases</a><a href="/guides/guides" class="w-nav-link clj-nav-link">Guides</a><a href="/community/success_stories" class="w-nav-link clj-nav-link">Community</a><a href="/dev/dev" class="w-nav-link clj-nav-link">Dev</a><a href="/news/news" class="w-nav-link clj-nav-link">News</a><a href="#" data-ix="search-click-trigger" class="w-nav-link clj-nav-link clj-nav-search">&#xed11;</a>
      </nav>
      <div class="w-nav-button clj-menu-button">
        <div class="w-icon-nav-menu"></div>
      </div>
    </div>
  </div>
  <div data-ix="hide-search" class="w-section clj-search-section">
    <div class="w-container">
      <div class="w-form clj-search-form-wrapper">
        <form id="wf-form-Search-Form" name="wf-form-Search-Form" action="https://duckduckgo.com/" method="get" onSubmit="searchClj(this)">
          <div class="w-row">
            <div class="w-col w-col-6 w-col-small-6">
              <input id="hiddenSearch" type="hidden" name="sites" value="www.clojure.org">
              <input name="q" id="q" type="text" placeholder="Search clojure.org reference, guides, and API" title="Search text" autofocus="autofocus" class="w-input clj-search-input">
            </div>
            <div class="w-col w-col-3 w-col-small-3 clj-search-type">
              <select name="searchType" id="searchType" class="w-select clj-search-type">
                <option value="www.clojure.org">clojure.org</option>
                <option value="ask.clojure.org">ask.clojure.org</option>
              </select>
            </div>
            <div class="w-col w-col-3 w-col-small-3">
              <input type="submit" value="Search" class="w-button clj-search-submit">
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

<div class="w-section clj-content-section">
  <div class="w-container">
    <div class="clj-section-nav-container">
      <div data-collapse="small" data-animation="default" data-duration="200" data-contain="1" class="w-nav clj-section-navbar">
        <div class="w-container">
          <nav role="navigation" class="w-nav-menu clj-section-nav-menu">
            <a href="reader" class="w-nav-link clj-section-nav-item-link">The Reader</a>
            <a href="repl_and_main" class="w-nav-link clj-section-nav-item-link">The REPL and main</a>
            <a href="evaluation" class="w-nav-link clj-section-nav-item-link">Evaluation</a>
            <a href="special_forms" class="w-nav-link clj-section-nav-item-link">Special Forms</a>
            <a href="macros" class="w-nav-link clj-section-nav-item-link">Macros</a>
            <a href="other_functions" class="w-nav-link clj-section-nav-item-link">Other Functions</a>
            <a href="data_structures" class="w-nav-link clj-section-nav-item-link">Data Structures</a>
            <a href="datatypes" class="w-nav-link clj-section-nav-item-link">Datatypes</a>
            <a href="sequences" class="w-nav-link clj-section-nav-item-link">Sequences</a>
            <a href="transients" class="w-nav-link clj-section-nav-item-link">Transients</a>
            <a href="transducers" class="w-nav-link clj-section-nav-item-link">Transducers</a>
            <a href="multimethods" class="w-nav-link clj-section-nav-item-link">Multimethods and Hierarchies</a>
            <a href="protocols" class="w-nav-link clj-section-nav-item-link">Protocols</a>
            <a href="metadata" class="w-nav-link clj-section-nav-item-link">Metadata</a>
            <a href="namespaces" class="w-nav-link clj-section-nav-item-link">Namespaces</a>
            <a href="libs" class="w-nav-link clj-section-nav-item-link">Libs</a>
            <a href="vars" class="w-nav-link clj-section-nav-item-link">Vars and Environments</a>
            <a href="refs" class="w-nav-link clj-section-nav-item-link">Refs and Transactions</a>
            <a href="agents" class="w-nav-link clj-section-nav-item-link">Agents</a>
            <a href="atoms" class="w-nav-link clj-section-nav-item-link">Atoms</a>
            <a href="reducers" class="w-nav-link clj-section-nav-item-link">Reducers</a>
            <a href="java_interop" class="w-nav-link clj-section-nav-item-link">Java Interop</a>
            <a href="compilation" class="w-nav-link clj-section-nav-item-link">Compilation and Class Generation</a>
            <a href="other_libraries" class="w-nav-link clj-section-nav-item-link">Other Libraries</a>
            <a href="lisps" class="w-nav-link clj-section-nav-item-link">Differences with Lisps</a>
            <a href="deps_and_cli" class="w-nav-link clj-section-nav-item-link">Deps and CLI</a>
            <a href="deps_edn" class="w-nav-link clj-section-nav-item-link">deps.edn</a>
          </nav>
          <div data-ix="toggle-section-nav-icon" class="w-nav-button w-clearfix clj-section-nav-toggle">
            <div class="clj-section-nav-text">deps.edn Reference</div>
            <div class="clj-section-nav-icon-closed">&#xeab2;</div>
            <div data-ix="init-hide-section-nav-icon-open" class="clj-section-nav-icon-open">&#xeab9;</div>
          </div>
        </div>
      </div>
    </div>
    <div class="clj-content-container">

      <h1>deps.edn Reference</h1>

      <div class="sect1">
<h2 id="_overview"><a class="anchor" href="#_overview"></a>Overview</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The deps.edn file is a data file specifying all information needed to form a project classpath, including deps, paths, and external dependency repository information. The deps.edn file format is used by the <a href="https://github.com/clojure/tools.deps">tools.deps library</a> and the <a href="deps_and_cli">Clojure CLI</a>.</p>
</div>
<div class="paragraph">
<p>If you are building a tool that would like to leverage deps.edn, create well-known namespaced <a href="deps_edn#aliases">:aliases</a> as a means to convey tool configuration, rather than adding new arbitrary tags elsewhere in the deps.edn data - these may not be preserved or conveyed during processing. Tools can access alias data via the basis at runtime, or programatically via tools.deps.</p>
</div>
<div id="index" class="listingblock">
<div class="title">Index of all attributes</div>
<div class="content">
<pre>{;; Project paths
 <a href="deps_edn#paths">:paths</a> ["relative/path1" :path-alias]

 ;; Project dependencies
 <a href="deps_edn#deps">:deps</a> {
   ;; Maven lib
   <a href="deps_edn#deps_mvn">groupId/artifactId$classifier</a> {<a href="deps_edn#deps_mvn_version">:mvn/version</a> "1.2.3"
                                  <a href="deps_edn#deps_deps_exclusions">:exclusions</a> [lib1 lib2]}

   ;; Git lib
   <a href="deps_edn#deps_git">gitlib/name</a> {<a href="deps_edn#deps_git_url">:git/url</a> "https://example.com/repo"
                <a href="deps_edn#deps_git_tag">:git/tag</a> "dev"
                <a href="deps_edn#deps_git_sha">:git/sha</a> "123abcd"
                <a href="deps_edn#deps_deps_root">:deps/root</a> "sub/dir"
                <a href="deps_edn#deps_deps_manifest">:deps/manifest</a> :pom
                <a href="deps_edn#deps_deps_exclusions">:exclusions</a> [lib1 lib2]}

   ;; Local directory
   <a href="deps_edn#deps_local">localdir/name</a> {<a href="deps_edn#deps_local_root">:local/root</a> "path/to/dir"
                  <a href="deps_edn#deps_deps_manifest">:deps/manifest</a> :pom
                  <a href="deps_edn#deps_deps_exclusions">:exclusions</a> [lib1 lib2]}

   ;; Local jar
   <a href="deps_edn#deps_local">localjar/name</a> {<a href="deps_edn#deps_local_root">:local/root</a> "path/to.jar"
                  <a href="deps_edn#deps_deps_exclusions">:exclusions</a> [lib1 lib2]}}

 ;; Aliases give a name to any set of edn data
 <a href="deps_edn#aliases">:aliases</a> {
   :alias-name {
     <a href="deps_edn#aliases_extradeps">:extra-deps</a> {lib coord}
     <a href="deps_edn#aliases_overridedeps">:override-deps</a> {lib coord}
     <a href="deps_edn#aliases_defaultdeps">:default-deps</a> {lib coord}
     <a href="deps_edn#aliases_deps">:deps</a> {lib coord}
     <a href="deps_edn#aliases_deps">:replace-deps</a> {lib coord}

     <a href="deps_edn#aliases_extrapaths">:extra-paths</a> ["p1" "p2"]
     <a href="deps_edn#aliases_paths">:paths</a> ["p1" "p2"]
     <a href="deps_edn#aliases_paths">:replace-paths</a> ["p1" "p2"]
     <a href="deps_edn#aliases_classpathoverrides">:classpath-overrides</a> {lib "path"}

     <a href="deps_edn#aliases_nsdefault">:ns-default</a> namespace
     <a href="deps_edn#aliases_nsaliases">:ns-aliases</a> {alias namespace}

     <a href="deps_edn#aliases_execfn">:exec-fn</a> afn/symbol
     <a href="deps_edn#aliases_execargs">:exec-args</a> {key val}

     <a href="deps_edn#aliases_jvmopts">:jvm-opts</a> ["opt1" "opt2"]
     <a href="deps_edn#aliases_mainopts">:main-opts</a> ["opt1" "opt2"]}}

 ;; Procurer config
 <a href="deps_edn#procurer_mvn_localrepo">:mvn/local-repo</a> "path/to/local-repo"
 <a href="deps_edn#procurer_mvn_repos">:mvn/repos</a> {"repo" {<a href="deps_edn#procurer_mvn_repos_url">:url</a> "https://..."
                     <a href="deps_edn#procurer_mvn_repos_releases">:releases</a> {<a href="deps_edn#procurer_mvn_repos_enabled">:enabled</a> true
                                <a href="deps_edn#procurer_mvn_repos_update">:update</a> :daily
                                <a href="deps_edn#procurer_mvn_repos_checksum">:checksum</a> true}
                     <a href="deps_edn#procurer_mvn_repos_snapshots">:snapshots</a> {#_same_as_releases}}}

 ;; Tool publishing
 <a href="deps_edn#tools_usage">:tools/usage</a> {<a href="deps_edn#aliases_nsdefault">:ns-default</a> namespace
               <a href="deps_edn#aliases_nsaliases">:ns-aliases</a> {alias namespace}}

 ;; Lib that requires preparation (compilation) before use
 <a href="deps_edn#prep_lib">:deps/prep-lib</a> {<a href="deps_edn#prep_lib_ensure">:ensure</a> "target/classes"
                 <a href="deps_edn#prep_lib_alias">:alias</a> :build
                 <a href="deps_edn#prep_lib_fn">:fn</a> compile}}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="paths"><a class="anchor" href="#paths"></a><code>:paths</code></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Paths specify the directories in the project that should be put on the project classpath, including both source and resources.</p>
</div>
<div class="paragraph">
<p>Paths are declared in a top level key <code>:paths</code> and are a collection of string paths or alias names. Alias names refer to a collection of paths defined in an alias (this can be done for reuse).</p>
</div>
<div class="paragraph">
<p>Paths should be subdirectories relative to the project root, such as <code>"src"</code> or <code>"resources"</code>. Absolute paths are supported but should be used only in exceptional cases. Paths outside the project root will trigger a warning message - these are deprecated and may be removed in the future.</p>
</div>
<div class="paragraph">
<p>If used, alias names should refer to a path vector in the alias data:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:paths [:clj-paths :resource-paths]
 :aliases
 {:clj-paths ["src/clj" "src/cljc"]
  :resource-paths ["resources"]}}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Paths are always included in the beginning of the classpath, in the order provided in the expanded <code>:paths</code> collection.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="deps"><a class="anchor" href="#deps"></a><code>:deps</code></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Dependencies are declared in deps.edn with a top level key <code>:deps</code> - a map from library to coordinate.</p>
</div>
<div class="paragraph">
<p>The library name is a qualified symbol. Unqualified symbols are treated as <code>name/name</code> but this usage is deprecated. Coordinates (and library names to some extent) are specific to the coordinate types below.</p>
</div>
<div class="paragraph">
<p>Dependencies are <a href="dep_expansion">expanded</a> from this top-level set of deps to include all transitive deps. Generally, the newest version is selected (barring other constraints - see the docs). Dependencies will be put on the classpath after any paths, sorted by a) depth from root and b) alphabetical sort of deps at a certain depth. This order should be stable.</p>
</div>
<div class="paragraph">
<p>Examples:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:deps
 {;; example maven dep
  org.clojure/tools.reader {:mvn/version "1.1.1"}

  ;; example git dep
  io.github.sally/awesome {:tag "v1.2.3" :sha "123abcd"}

  ;; example local project
  my.dev/project {:local/root "../project"}

  ;; example local jar
  my.driver/jar {:local/root "../libs/driver.jar"}
 }}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="deps_mvn"><a class="anchor" href="#deps_mvn"></a>Maven deps</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Maven procurer uses the qualifier <code>mvn</code> and is used to retrieve library artifacts from <a href="https://maven.apache.org/">Maven repositories</a>, the standard repository manager in the Java ecosystem. Libraries are downloaded as .jar files and stored in the Maven local repository cache (located in ~/.m2/repository by default or override with <a href="deps_edn#mvn_localrepo">:mvn/local-repo</a>). Other JVM-based tools may also use this cache.</p>
</div>
<div class="paragraph">
<p>Maven libraries are located in Maven repositories using "Maven coordinates", typically the groupId, artifactId, and version (sometimes also abbreivated as GAV). In deps.edn, the library name is parsed as <code>groupId/artifactId</code> and the version is taken from <code>:mvn/version</code>. Some Maven artifacts also have a "classifier", which is a variant of a particular artifact. In the Maven procurer, classifiers are included at the end of the lib name, separated by a <code>$</code> in this format: <code>groupId/artifactId$classifier</code>.</p>
</div>
<div class="paragraph">
<p>Currently, only <code>jar</code> artifacts are supported. Support for other artifact types (particularly Bill of Materials poms) may be added in the future.</p>
</div>
<div class="sect2">
<h3 id="deps_mvn_version"><a class="anchor" href="#deps_mvn_version"></a><code>:mvn/version</code></h3>
<div class="paragraph">
<p>Required for all Maven dependencies, specifies the version as a string.</p>
</div>
<div class="paragraph">
<p>Examples:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>"1.2.3"</code></p>
</li>
<li>
<p><code>"1.2.3-SNAPSHOT"</code></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="deps_git"><a class="anchor" href="#deps_git"></a>Git deps</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The <code>git</code> procurer supports direct use of source-based libs hosted in Git repositories. Git libs are downloaded by default to the <code>~/.gitlibs</code> directory. The working tree is checked out and cached for each sha included as a dependency.</p>
</div>
<div class="paragraph">
<p>To specify a git lib as a dependency, two pieces of information must be known - the Git repo url and a specific sha. Using movable references like branch names is not supported.</p>
</div>
<div class="paragraph">
<p>Git coordinates have the following attributes:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>:git/url</code> - optional, Git url (may be inferred from lib name, see below)</p>
</li>
<li>
<p><code>:git/sha</code> - required, either a full 40-char sha or a sha prefix can be provided in combination with a tag (<code>:sha</code> is also accepted for backwards compatibility)</p>
</li>
<li>
<p><code>:git/tag</code> - optional, git tag name (may be used only in combination with a <code>:git/sha</code>, <code>:tag</code> accepted for backwards compatibility)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The git url must either be provided or inferred from the lib name. If provided, the <code>:git/url</code> takes precedence. Lib to url convention is as follows:</p>
</div>
<table class="tableblock frame-all grid-all stretch table">
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Lib format</th>
<th class="tableblock halign-left valign-top">Inferred <code>:git/url</code></th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">io.github.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://github.com/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">com.github.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://github.com/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">io.gitlab.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://gitlab.com/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">com.gitlab.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://gitlab.com/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">io.bitbucket.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://bitbucket.org/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">org.bitbucket.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://bitbucket.org/ORG/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">io.beanstalkapp.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://ORG.git.beanstalkapp.com/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">com.beanstalkapp.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://ORG.git.beanstalkapp.com/PROJECT.git"</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">ht.sr.ORG/PROJECT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>"https://git.sr.ht/~ORG/PROJECT"</code></p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>This is an example deps.edn including two valid git deps, the first with inferred git url, git tag, and sha prefix, and the second with explicit git url and full sha:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:deps
 {;; implied git url, tag + sha prefix
  io.github.clojure/tools.deps.graph {:git/tag "v1.1.68" :git/sha "6971bb4"}

  ;; explicit git url, full sha
  org.clojure/tools.build {:git/url "https://github.com/clojure/tools.build.git"
                           :git/sha "ba1a2bf421838802e7bdefc541b41f57582e53b6"}}}</code></pre>
</div>
</div>
<div class="sect2">
<h3 id="deps_git_url"><a class="anchor" href="#deps_git_url"></a><code>:git/url</code></h3>
<div class="paragraph">
<p>The <code>:git/url</code> is inferred from the lib name if using the format described above, else it must be provided.</p>
</div>
<div class="paragraph">
<p>The most common git url protocols are https and ssh. https repos will be accessed anonymously and require no additional authentication information. This approach is recommended for public repos you don&#8217;t control. ssh repos may be either public or private and use your ssh identity.</p>
</div>
<div class="paragraph">
<p>For more information on creating keys and using the ssh-agent to manage your ssh identities, GitHub provides excellent info:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" class="bare">https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/</a></p>
</li>
<li>
<p><a href="https://help.github.com/articles/working-with-ssh-key-passphrases/" class="bare">https://help.github.com/articles/working-with-ssh-key-passphrases/</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Other protocols (including local and file) should work but are not commonly used.</p>
</div>
</div>
<div class="sect2">
<h3 id="deps_git_tag"><a class="anchor" href="#deps_git_tag"></a><code>:git/tag</code></h3>
<div class="paragraph">
<p><code>:git/tag</code> is an optional coord key that indicates the semantics of the sha by specifying the tag. If the <code>:git/tag</code> is provided, the <code>:git/sha</code> can be a short sha instead of a full 40-character sha.</p>
</div>
</div>
<div class="sect2">
<h3 id="deps_git_sha"><a class="anchor" href="#deps_git_sha"></a><code>:git/sha</code></h3>
<div class="paragraph">
<p><code>:git/sha</code> is a required coord key. If the <code>:git/tag</code> is provided it can be the prefix sha (they must unpeel to the same commit), otherwise it should be a full 40-char sha.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="deps_local"><a class="anchor" href="#deps_local"></a>Local deps</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Local deps refer to either a directory or a jar file on disk. The <code>:local/root</code> attribute is required and may be either absolute or relative.</p>
</div>
<div class="sect2">
<h3 id="deps_local_root"><a class="anchor" href="#deps_local_root"></a><code>:local/root</code></h3>
<div class="paragraph">
<p>For a local project directory, the <code>:local/root</code> should be a directory path, either absolute or relative to the location of the project directory.</p>
</div>
<div class="paragraph">
<p>For a jar file, the <code>:local/root</code> should be either absolute or relative path to a jar file. If the jar includes a pom.xml file, it will be used to find transitive deps</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_shared_dep_attributes"><a class="anchor" href="#_shared_dep_attributes"></a>Shared dep attributes</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="deps_deps_exclusions"><a class="anchor" href="#deps_deps_exclusions"></a><code>:exclusions</code></h3>
<div class="paragraph">
<p>The <code>:exclusions</code> attribute takes a vector of lib symbols to exclude as transitive deps from this dependency. This attribute can be used on any dependency.</p>
</div>
</div>
<div class="sect2">
<h3 id="deps_deps_root"><a class="anchor" href="#deps_deps_root"></a><code>:deps/root</code></h3>
<div class="paragraph">
<p>The <code>:deps/root</code> attribute indicates a relative directory path within a file-based dep to search for the manifest file. It is commonly used with monorepo style projects to specify a dep root in a directory below the repo root.</p>
</div>
</div>
<div class="sect2">
<h3 id="deps_deps_manifest"><a class="anchor" href="#deps_deps_manifest"></a><code>:deps/manifest</code></h3>
<div class="paragraph">
<p>The <code>:deps/manifest</code> attribute specifies the project manifest type and overrides auto detection, useful values are <code>:deps</code>, <code>:pom</code>. (Other values are <code>:mvn</code>, and <code>:jar</code> but these don&#8217;t need to be specified.)</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="aliases"><a class="anchor" href="#aliases"></a><code>:aliases</code></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Aliases give a name to a data structure that can be used either by the Clojure CLI itself or other consumers of deps.edn. They are defined in the <code>:aliases</code> section of the config file.</p>
</div>
<div class="sect2">
<h3 id="aliases_extradeps"><a class="anchor" href="#aliases_extradeps"></a><code>:extra-deps</code></h3>
<div class="paragraph">
<p><code>:extra-deps</code> is the most common modification - it allows you to add extra dependencies to the base dependency set. The value is a map of library to coordinate:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:extra-deps {criterium/criterium {:mvn/version "0.4.4"}}}</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="aliases_overridedeps"><a class="anchor" href="#aliases_overridedeps"></a><code>:override-deps</code></h3>
<div class="paragraph">
<p><code>:override-deps</code> overrides the coordinate version chosen by the version resolution to force a particular version instead. The value is a map of library to coordinate:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="aliases_defaultdeps"><a class="anchor" href="#aliases_defaultdeps"></a><code>:default-deps</code></h3>
<div class="paragraph">
<p><code>:default-deps</code> provides a set of default coordinate versions to use if no coordinate is specified. The default deps can be used across a set of shared projects to act as a dependency management system:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:default-deps {org.clojure/core.cache {:mvn/version "0.6.4"}}}</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="aliases_deps"><a class="anchor" href="#aliases_deps"></a><code>:deps</code> or <code>:replace-deps</code></h3>
<div class="paragraph">
<p><code>:deps</code> and <code>:replace-deps</code> are synonyms and define a deps map that REPLACES the project :deps. The value is a map of lib to coordinate.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_extrapaths"><a class="anchor" href="#aliases_extrapaths"></a><code>:extra-paths</code></h3>
<div class="paragraph">
<p><code>:extra-paths</code> is used to include source paths in addition to your standard source paths, for example to include directories of test source:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:extra-paths ["test" "resources"]}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Note that external paths should be at or under the root directory of the project (location of the <code>deps.edn</code> file).</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_paths"><a class="anchor" href="#aliases_paths"></a><code>:paths</code> or <code>:replace-paths</code></h3>
<div class="paragraph">
<p><code>:paths</code> and <code>:replace-paths</code> are synonyms and define a collection of string paths to REPLACE the project <code>:paths</code>.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_classpathoverrides"><a class="anchor" href="#aliases_classpathoverrides"></a><code>:classpath-overrides</code></h3>
<div class="paragraph">
<p><code>:classpath-overrides</code> specifies a location to pull a dependency that overrides the path found during dependency resolution, for example to replace a dependency with a local debug version. Many of these use cases are ones where you would be tempted to prepend the classpath to "override" something else:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:classpath-overrides
 {org.clojure/clojure "/my/clojure/target"}}</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="aliases_nsdefault"><a class="anchor" href="#aliases_nsdefault"></a><code>:ns-default</code></h3>
<div class="paragraph">
<p>The <code>:ns-default</code> attribute is a namespace symbol that will be used as the default namespace for attributes that provide an unqualified symbol, most importantly <code>:exec-fn</code>.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_nsaliases"><a class="anchor" href="#aliases_nsaliases"></a><code>:ns-aliases</code></h3>
<div class="paragraph">
<p>The <code>:ns-aliases</code> attribute is a map of alias symbol to namespace symbol that will be used to resolve qualified symbols, most importantly <code>:exec-fn</code>.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_execfn"><a class="anchor" href="#aliases_execfn"></a><code>:exec-fn</code></h3>
<div class="paragraph">
<p>The <code>:exec-fn</code> symbol defines the default function to be invoked when using <code>-X</code> function execution in the Clojure CLI:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">;; deps.edn
{:aliases
 {:my-fn
  {:exec-fn my.qualified/fn
   :exec-args {:my {:data 123}
               :config 456}}}}</code></pre>
</div>
</div>
<div class="paragraph">
<p>The <code>:exec-fn</code> symbol is resolved with the following rules:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>If function is unqualified, use the namespace in the <code>:ns-default</code> key in the arg map (if none, this is an error)</p>
</li>
<li>
<p>If function is qualified, and the qualifier is an alias in the arg map under <code>:ns-aliases</code>, use that namespace</p>
</li>
<li>
<p>Else use the fully qualified function symbol</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="aliases_execargs"><a class="anchor" href="#aliases_execargs"></a><code>:exec-args</code></h3>
<div class="paragraph">
<p>The <code>:exec-args</code> map specifies key-value pairs that are provided when executing an <code>:exec-fn</code> function with -X or -T in the Clojure CLI. These kv pairs are effectively provided first, so can be overridden by subsequent kv pairs on the command line.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_jvmopts"><a class="anchor" href="#aliases_jvmopts"></a><code>:jvm-opts</code></h3>
<div class="paragraph">
<p>The <code>:jvm-opts</code> are a collection of string JVM options to be provided when executing the Clojure CLI with -M, -X, -T, or a repl.</p>
</div>
</div>
<div class="sect2">
<h3 id="aliases_mainopts"><a class="anchor" href="#aliases_mainopts"></a><code>:main-opts</code></h3>
<div class="paragraph">
<p>The <code>:main-opts</code> are a collection of string options provided to a program started with -M on the Clojure CLI. If multiple aliases are merged that provide main args, only the args from the last one are used (they do not accumulate or combine). Additional main opts may be provided on the command line after -M.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="procurers"><a class="anchor" href="#procurers"></a>Procurers</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="procurers_mvn"><a class="anchor" href="#procurers_mvn"></a>Maven</h3>
<div class="paragraph">
<p>The Maven procurer uses the Maven resolver and Maven repository system to download artifacts. This is described further in the <a href="deps_edn#deps_mvn">Maven deps</a> section. Some options can be configured in the deps.edn.</p>
</div>
<div class="sect3">
<h4 id="procurer_mvn_localrepo"><a class="anchor" href="#procurer_mvn_localrepo"></a><code>:mvn/local-repo</code></h4>
<div class="paragraph">
<p>By default, Maven uses the <code>~/.m2/repository</code> directory as a local cache of downloaded poms and jars. The <code>:mvn/local-repo</code> is a string path to an alternate directory to use as the local Maven cache.</p>
</div>
</div>
<div class="sect3">
<h4 id="procurer_mvn_repos"><a class="anchor" href="#procurer_mvn_repos"></a><code>:mvn/repos</code></h4>
<div class="paragraph">
<p>The Maven procurer always uses two built-in repositories that are always checked first in this order:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{"central" {:url "https://repo1.maven.org/maven2/"}
 "clojars" {:url "https://repo.clojars.org/"}}</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can supply additional repositories in the <code>:mvn/repos</code> key as a map of repository name to a map of additional repository attributes described below. Repository names are arbitrary. The <code>:url</code> attribute is required, all others are optional. Repositories declared in dependency poms or deps.edn are not used - all necessary repositories must be defined in the top deps.edn file being used.</p>
</div>
</div>
<div class="sect3">
<h4 id="procurer_mvn_repos_url"><a class="anchor" href="#procurer_mvn_repos_url"></a><code>:url</code></h4>
<div class="paragraph">
<p>The <code>:url</code> is a string url to the repository root.</p>
</div>
<div class="paragraph">
<p><code>http://</code> urls are not supported by default, but see <a href="deps_and_cli#env_vars">deps_and_cli</a> for information on the <code>CLOJURE_CLI_ALLOW_HTTP_REPO</code> if you need this.</p>
</div>
</div>
<div class="sect3">
<h4 id="procurer_mvn_repos_snapshots"><a class="anchor" href="#procurer_mvn_repos_snapshots"></a><code>:releases</code> and <code>:snapshots</code></h4>
<div class="paragraph">
<p>The <code>:releases</code> attribute is optional, but can be used to override the default repository configuration for release (non-snapshot artifacts):</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:mvn/repos
 {"my-releases" {:url "https://example.com/releases"
                 :snapshots {:enabled false}
                 :releases {:enabled true
                            :update :daily
                            :checksum :fail}}}}</code></pre>
</div>
</div>
<div class="paragraph">
<p>The <code>:snapshots</code> attribute is the same as the <code>:releases</code> attribute, but applies repository policy for snapshot artifacts.</p>
</div>
<div class="paragraph">
<p>Repository attributes:</p>
</div>
<div id="procurer_mvn_repos_checksum" class="ulist">
<ul>
<li>
<p><code>:enabled</code> is a boolean, default=true. Sometimes this is used to target a repository only for releases or snapshots.</p>
</li>
<li>
<p><code>:update</code> is a flag for how often to check the repo for updates, valid values are <code>:daily</code> (default), <code>:always</code>, <code>:never</code>, or an interval in minutes (integer).</p>
</li>
<li>
<p><code>:checksum</code> is a flag for checksum validation, one of <code>:warn</code> (default), <code>:fail</code>, <code>:ignore</code>.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="tools"><a class="anchor" href="#tools"></a>Tool definition</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Clojure CLI tools loaded from Github or a local dir can provide default tool configuration in their deps.edn using the <code>:tools/usage</code> key. All users of the tool will get this configuration as part of their tool installation.</p>
</div>
<div class="sect2">
<h3 id="tools_usage"><a class="anchor" href="#tools_usage"></a><code>:tools/usage</code></h3>
<div class="paragraph">
<p>An exec argmap for a deps.edn-based tool.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="prep"><a class="anchor" href="#prep"></a>Prep lib</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="prep_lib"><a class="anchor" href="#prep_lib"></a><code>:deps/prep-lib</code></h3>
<div class="paragraph">
<p>Source libs with Clojure source can immediately be added to the classpath of a project using it. However, some source libs require some preparation before they can be added, for example due to needing Java compilation, or copying / replacing resource files, etc. The Clojure CLI will now detect projects that need preparation and prevent the program from being run from source unless the prep step has been completed.</p>
</div>
<div class="paragraph">
<p>If your library needs preparation, add the <code>:deps/prep-lib</code> key to your <code>deps.edn</code>:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="prettyprint highlight"><code data-lang="clojure">{:paths ["src" "target/classes"]
 :deps/prep-lib
 {:ensure "target/classes"
  :alias :build
  :fn compile-java}}</code></pre>
</div>
</div>
<div class="sect3">
<h4 id="prep_lib_ensure"><a class="anchor" href="#prep_lib_ensure"></a><code>:ensure</code></h4>
<div class="paragraph">
<p><code>:ensure</code> is a directory path relative to the project, whose existence determines whether prep is needed (if it exists, prep has been done).</p>
</div>
</div>
<div class="sect3">
<h4 id="prep_lib_alias"><a class="anchor" href="#prep_lib_alias"></a><code>:alias</code></h4>
<div class="paragraph">
<p><code>:alias</code> is the keyword alias to invoke with <code>-T</code> during prep</p>
</div>
</div>
<div class="sect3">
<h4 id="prep_lib_fn"><a class="anchor" href="#prep_lib_fn"></a><code>:fn</code></h4>
<div class="paragraph">
<p><code>:fn</code> is the function to invoke with <code>-T</code> during prep</p>
</div>
</div>
</div>
</div>
</div>


<div class="clj-prev-next-container">
  
  
</div>

    </div>
  </div>
</div>

  <div class="w-section clj-footer">
    <div class="w-container clj-footer-links-container">
      <div class="w-row">
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Community</h6>
            <a href="/community/resources" class="clj-footer-link">Resources</a>
            <a href="/community/contributing" class="clj-footer-link">Contributing</a>
            <a href="/community/companies" class="clj-footer-link">Companies</a>
            <a href="/community/contributing_site" class="clj-footer-link">Site</a>
          <h6 class="clj-footer-heading">Legal</h6>
            <a href="/community/license" class="clj-footer-link">License</a>
            <a href="/privacy" class="clj-footer-link">Privacy Policy</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Documentation</h6>
            <a href="/about/rationale" class="clj-footer-link">Overview</a>
            <a href="/reference/documentation" class="clj-footer-link">Reference</a>
            <a href="/api/api" class="clj-footer-link">API</a>
            <a href="/guides/guides" class="clj-footer-link">Guides</a>
            <a href="/community/libraries" class="clj-footer-link">Libraries &amp; Tools</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Updates</h6>
            <a href="/news/news" class="clj-footer-link">News</a>
            <a href="/community/events" class="clj-footer-link">Events</a>
          <h6 class="clj-footer-heading">ETC</h6>
            <a href="https://www.youtube.com/user/ClojureTV" class="clj-footer-link">ClojureTV</a>
            <a href="/community/books" class="clj-footer-link">Books</a>
            <a href="/community/swag" class="clj-footer-link">Swag</a>
        </div>
        <div class="w-col w-col-3 w-col-small-6 w-col-tiny-6">
          <h6 class="clj-footer-heading">Code</h6>
            <a href="/releases/downloads" class="clj-footer-link">Releases</a>
            <a href="https://github.com/clojure/clojure/" class="clj-footer-link">Source</a>
            <a href="http://clojurescript.org" class="clj-footer-link">ClojureScript</a>
            <a href="/about/clojureclr" class="clj-footer-link">ClojureCLR</a>
        </div>
      </div>
    </div>
    <div class="w-container clj-footer-legal-container">
      <div class="w-clearfix clj-footer-legal">
        <div class="clj-footer-logo">&nbsp;</div>
        <div class="clj-footer-legal-links">
          <div class="clj-footer-copyright">Copyright 2008-2022 Rich Hickey | <a class="clj-footer-sub-link" href="/privacy">Privacy Policy</a><br/>Logo &amp; site design by Tom Hickey
          </div>
          <div class="clj-footer-designed-by">Published 2023-12-18<br/>Update <a class="clj-footer-sub-link" href="https://github.com/clojure/clojure-site/blob/master/content/reference/deps_edn.adoc">this page</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script type="text/javascript" src="/js/webflow.js"></script>
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script>
  $(document).ready( (event) => {
    $('pre code').each((index, obj) => {
      $(obj).addClass($(obj).attr("data-lang"));
      hljs.highlightBlock(obj);
    });
  });
  </script>
  <!--[if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
</body>
</html>
